@model RetailSales.Models.Purchaseorder
@{
    Layout = "_Layout";
    ViewData["Title"] = "PurchasOrder";
}
<head>
    <link rel="stylesheet" href="~/css/bootstrap-toggle.min.css">
</head>
<style>
    .newwidth {
        width: 120px;
    }
</style>
<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li class="active"> <strong>Move To GRN</strong> </li>
        </ol>
    </div>
</div>

<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    @using (Html.BeginForm("MoveGRN", "Purchaseorder", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <br />
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-5 control-label"><strong>PO No :</strong><label class="mandatory"></label></label>
                                        
                                            @Html.HiddenFor(C => C.ID)
                                            @Html.DisplayFor(C => C.po)
                                            @Html.HiddenFor(C => C.po)
                                        @Html.HiddenFor(C=>C.Suppname)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label"><strong>PO Date :</strong><label class="mandatory"></label></label>
                                        
                                            @Html.DisplayFor(C => C.Podate)
                                            @Html.HiddenFor(C => C.Podate)
                                        
                                    </div>
                                </div>
                                
                            </div>
                            <div style="height:20px;"></div>
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-5 control-label"><strong>Supplier Name :</strong><label class="mandatory"></label></label>
                                        
                                            @Html.DisplayFor(C => C.Suppid)
                                            @Html.HiddenFor(C => C.Suppid)
                                            @Html.HiddenFor(C => C.Suppname)
                                        
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label"><strong>Supplier Address :</strong><label class="mandatory"></label></label>
                                        
                                            @Html.DisplayFor(C => C.Supplieraddress)
                                            @Html.HiddenFor(C => C.Supplieraddress)
                                        
                                    </div>
                                </div>
                            </div>
                            <div style="height:20px;"></div>
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-5 control-label"><strong>State :</strong><label class="mandatory"></label></label>
                                        
                                            @Html.DisplayFor(C => C.State)
                                            @Html.HiddenFor(C => C.State, new { @id = "state" })
                                        
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label"><strong>City :</strong><label class="mandatory"></label></label>
                                        
                                            @Html.DisplayFor(C => C.City)
                                            @Html.HiddenFor(C => C.City)
                                        
                                    </div>
                                </div>
                            </div>
                            <div style="height:20px;"></div>
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-5 control-label"><strong>Supplier Ref No :</strong><label class="mandatory"></label></label>
                                        
                                            @Html.DisplayFor(C => C.refno)
                                            @Html.HiddenFor(C => C.refno)
                                        
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label"><strong>Ref Date :</strong><label class="mandatory"></label></label>
                                        
                                            @Html.DisplayFor(C => C.refdate)
                                            @Html.HiddenFor(C => C.refdate)
                                        
                                    </div>
                                </div>
                            </div>
                            <div style="height:20px;"></div>
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-5 control-label"><strong>GST No :</strong><label class="mandatory"></label></label>
                                        
                                            @Html.DisplayFor(C => C.GST)
                                            @Html.HiddenFor(C => C.GST)
                                        
                                    </div>
                                </div>
                            </div>
                              <br />
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Invoice No.<label class="mandatory"></label></label>
                                        <div class="col-sm-12">
                                            @Html.TextBoxFor(C => C.billno, new { @id = "txtrefno", @class = "form-control", @TabIndex = 8 })<br />

                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Invoice Date<label class="mandatory"></label></label>
                                        <div class="input-group date form_date col-sm-6" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.billdate, new { @id = "refdate", @class = "form-control", @TabIndex = 9, @size = "20", style = "width: 170px", @readonly = true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:100px;">
                                        <table class="table table-striped table-hover" id="dataTable">
                                            <thead>
                                                <tr>

                                                    <th>Product Category</th>
                                                    <th>Product Name</th>
                                                    <th>Variant </th>
                                                    <th> HSN </th>
                                                    <th>Tax</th>
                                                    <th> UOM </th>
                                                    <th> Ordered </th>
                                                    
                                                    <th> Received </th>
                                                    <th> Accepted </th>
                                                    <th> Rejected </th>
                                                    <th> Exceed Qty </th>
                                                    <th> Shortage Qty </th>
                                                    <th> Dest UOM </th>
                                                    <th> CF </th>
                                                    <th> CF Qty</th>
                                                    <th>Rate (₹) </th>
                                                    <th>Amount (₹) </th>
                                                    @if (Model.State == "Tamil Nadu")
                                                    {
                                                        <th> CGST </th>
                                                        <th> SGST </th>
                                                    }
                                                    else
                                                    {
                                                        <th> IGST </th>
                                                    }
                                                    <th> Discount (%) </th>
                                                    <th> Discount (₹) </th>

                                                    <th>Total Amount (₹)</th>
                                                    <th></th>
                                                </tr>
                                            </thead>

                                            <tbody>
                                                @{
                                                    int i = 0;
                                                    int j = 1;

                                                    foreach (var item in Model.PurchaseorderLst.ToList())
                                                    {

                                                        <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">
                                                            <td>
                                                                <span style="width: 100px; display: inline-block;">
                                                                    @Html.DisplayFor(o => o.PurchaseorderLst[i].Item)
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].Itemid)
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].Item)
                                                                </span>
                                                            </td>
                                                            <td>
                                                                <span style="width: 120px; display: inline-block;">
                                                                    @Html.DisplayFor(o => o.PurchaseorderLst[i].Product)
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].Productid)
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].Product)
                                                                </span>
                                                            </td>
                                                            <td>
                                                                <span style="width: 150px; display: inline-block;">
                                                                    @Html.DisplayFor(o => o.PurchaseorderLst[i].Varient)
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].Varientid , new { @id = "hdvariant" + i })
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].Varient)
                                                                </span>
                                                            </td>

                                                            <td>
                                                                <span style="width: 80px; display: inline-block;">
                                                                    @Html.DisplayFor(o => o.PurchaseorderLst[i].Hsn)
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].Hsn)
                                                                </span>
                                                            </td>
                                                            
                                                            <td>
                                                                <span style="width: 60px; display: inline-block;">
                                                                    @Html.DisplayFor(o => o.PurchaseorderLst[i].Tariff)
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].Tariff)
                                                                </span>
                                                            </td>
                                                            <td>
                                                                <span style="width: 60px; display: inline-block;">
                                                                    @Html.DisplayFor(o => o.PurchaseorderLst[i].UOM, new { @id = "txtUOM" + i })
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].UOM, new { @id = "txtUOM" + i })
                                                                </span>
                                                            </td>
                                                            <td>
                                                                <span style="width: 50px; display: inline-block;">
                                                                    @Html.DisplayFor(o => o.PurchaseorderLst[i].Qty)
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].Qty, new { @id = "ordqty" + i })
                                                                </span>
                                                            </td>
                                                            
                                                            <td>
                                                                @Html.TextBoxFor(o => o.PurchaseorderLst[i].Recived, new { @id = "txtRecived" + i, @class = "form-control", style = "width: 80px;", type = "number", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                            </td>
                                                            <td>
                                                                 @Html.TextBoxFor(o => o.PurchaseorderLst[i].Accepted, new { @id = "txtAccepted" + i, @class = "form-control", style = "width: 80px;", type = "number", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                            </td>
                                                            <td>
                                                                 @Html.TextBoxFor(o => o.PurchaseorderLst[i].Rejected, new { @id = "txtRejected" + i, @class = "form-control", style = "width: 80px;", type = "number", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                            </td>
                                                            <td>
                                                                 <label id="exqty@(i)"></label>
                                                                @Html.HiddenFor(o => o.PurchaseorderLst[i].exqty, new { @id = "txtexqty" + i })
                                                                @Html.HiddenFor(o => o.PurchaseorderLst[i].exqty, new { @id = "exqty" + i })
                                                                
                                                            </td>
                                                            <td>
                                                                 <label id="shortqty@(i)"></label>
                                                                @Html.HiddenFor(o => o.PurchaseorderLst[i].shortqty, new { @id = "txtshortqty" + i })
                                                                @Html.HiddenFor(o => o.PurchaseorderLst[i].shortqty, new { @id = "shortqty" + i })
                                                                
                                                            </td>
                                                            <td>
                                                                @Html.DropDownListFor(o => o.PurchaseorderLst[i].DestUOM, Model.PurchaseorderLst[i].DUOMlst, "---Please Select---", new { @class = "form-control _select newcss", @id = "ddlDestUOM" + i, style = "width: 120px;", onchange = "changeUOM(this.value," + i + ")" })
                                                            </td>
                                                            <td>

                                                                @Html.TextBoxFor(o => o.PurchaseorderLst[i].CF, new { @id = "txtCF" + i, @class = "form-control", style = "width: 80px;", @onkeyup = "changeCF(this.value," + i + ")" })
                                                            </td>
                                                            <td>
                                                                @Html.TextBoxFor(o => o.PurchaseorderLst[i].CfQty, new { @id = "txtCfQty" + i, @class = "form-control", style = "width: 80px; text-align: right;", type = "number", @readonly = "readonly", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                            </td>
                                                            <td>

                                                                @Html.HiddenFor(o => o.PurchaseorderLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                                @Html.TextBoxFor(o => o.PurchaseorderLst[i].Rate, new { @id = "txtRate" + i, @class = "form-control", style = "width: 90px;text-align:right", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                            </td>
                                                            <td>

                                                                @Html.TextBoxFor(o => o.PurchaseorderLst[i].Amount, new { @id = "txtAmount" + i, @class = "form-control", style = "width: 100px;text-align:right", @readonly = "readonly" })
                                                            </td>
                                                            @if (Model.State == "Tamil Nadu")
                                                            {
                                                                <td>
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].CGSTP, new { @id = "CGSTP" + i })
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].SGSTP, new { @id = "SGSTP" + i })
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].IGSTP, new { @id = "IGSTP" + i })
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].IGST, new { @id = "IGST" + i, @class = "form-control", style = "width: 90px;text-align:right", @readonly = "readonly" })
                                                                     @Html.TextBoxFor(o => o.PurchaseorderLst[i].CGST, new { @id = "CGST" + i, @class = "form-control", style = "width: 90px;text-align:right", @readonly = "readonly" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(o => o.PurchaseorderLst[i].SGST, new { @id = "SGST" + i, @class = "form-control", style = "width: 90px;text-align:right", @readonly = "readonly" })
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td>
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].CGSTP, new { @id = "CGSTP" + i })
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].SGSTP, new { @id = "SGSTP" + i })
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].IGSTP, new { @id = "IGSTP" + i })
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].CGST, new { @id = "CGST" + i, @class = "form-control", style = "width: 90px;text-align:right", @readonly = "readonly" })
                                                                    @Html.HiddenFor(o => o.PurchaseorderLst[i].SGST, new { @id = "SGST" + i, @class = "form-control", style = "width: 90px;text-align:right", @readonly = "readonly" })
                                                                    @Html.TextBoxFor(o => o.PurchaseorderLst[i].IGST, new { @id = "IGST" + i, @class = "form-control", style = "width: 90px;text-align:right", @readonly = "readonly" })

                                                                </td>
                                                            }

                                                            <td>
                                                                
                                                                @Html.TextBoxFor(o => o.PurchaseorderLst[i].DiscPer, new { @id = "txtDiscPer" + i, @class = "form-control", style = "width: 100px;text-align:right", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeDisc(this," + i + ")" })
                                                            </td>

                                                            <td>
                                                                
                                                                @Html.TextBoxFor(o => o.PurchaseorderLst[i].DiscAmount, new { @id = "txtDiscAmount" + i, @class = "form-control", style = "width: 100px;text-align:right", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                            </td>

                                                            <td>
                                                               
                                                                @Html.TextBoxFor(o => o.PurchaseorderLst[i].Total, new { @id = "txtTotal" + i, @class = "form-control", style = "width: 120px;text-align:right", type = "number", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", @readonly = "readonly" })
                                                            </td>
                                                            <td>
                                                                @Html.HiddenFor(o => o.PurchaseorderLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                                <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="PurchaseorderLst.Index" type="hidden" value="@(i)" />
                                                            </td>
                                                        </tr>
                                                        i = i + 1;
                                                        j = j + 1;
                                                    }
                                                }

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>


                            <div style="height:30px;"></div>
                            <div class="row">

                                <div class="col-md-4" style="overflow-x:scroll; min-width:300px; min-height:300px;">

                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                        </thead>
                                        <tbody id="tbBooks">
                                            @{
                                                <tr>

                                                    <th>GROSS (₹)</th>
                                                    <td>
                                                        
                                                        @Html.TextBoxFor(o => o.Gross, new { @id = "txtGross", @class = "form-control", style = "width: 150px;text-align:right", @readonly = "readonly" })
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th>DISCOUNT (₹)</th>
                                                    <td>
                                                        
                                                        @Html.TextBoxFor(o => o.Disc, new { @id = "txtDisc", @class = "form-control", style = "width: 150px;text-align:right", @onkeyup = "changeDisTot(this)" })
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th>FREIGHT (₹)</th>
                                                    <td>
                                                        
                                                        @Html.TextBoxFor(o => o.Frieghtcharge, new { @id = "txtFrieghtcharge", @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 150px;text-align:right", @onkeyup = "changeFrightTot(this)" })
                                                    </td>
                                                </tr>
                                                if (Model.State == "Tamil Nadu"){
                                                    <tr>
                                                        <th>CGST</th>
                                                        <td>
                                                            
                                                            @Html.TextBoxFor(o => o.CGST, new { @id = "txtCGST", @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 150px;text-align:right", @readonly = "readonly" })
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <th>SGST</th>
                                                        <td>
                                                            
                                                            @Html.TextBoxFor(o => o.SGST, new { @id = "txtSGST", @class = "form-control", style = "width: 150px;text-align:right", @readonly = "readonly" })
                                                        </td>
                                                    </tr>
                                                }
                                                else{
                                                    <tr>
                                                        <th>IGST</th>
                                                        <td>
                                                            
                                                            @Html.TextBoxFor(o => o.IGST, new { @id = "txtIGST", @class = "form-control", style = "width: 150px;text-align:right", @readonly = "readonly" })
                                                        </td>
                                                    </tr>
                                                }
                                                
                                                

                                                <tr>
                                                    <th> ROUND OFF</th>
                                                    <td>
                                                        <div style="display: flex; align-items: center; gap: 10px;">

                                                            <input type="checkbox" data-toggle="toggle" id="toggle-two" data-on="-" data-off="+" data-width="60" data-onstyle="secondary" data-offstyle="secondary" onclick="changeTot(this)">

                                                            @Html.TextBoxFor(o => o.Round, new { @id = "txtRound", @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;text-align:right", @onkeyup = "changeTot(this)" })
                                                         </div>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th> TOTAL (₹) </th>
                                                    <td>
                                                        
                                                        <input type="hidden" id="hidnet" />
                                                        @Html.TextBoxFor(o => o.Net, new { @id = "txtNet", @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 150px;text-align:right", @readonly = "readonly" })
                                                    </td>


                                                </tr>

                                            }


                                        </tbody>
                                    </table>
                                </div>

                                <div class="col-md-8">



                                    <div class="tabs-container">
                                        <ul class="nav nav-pills nav-fill">
                                            @*<li class="active"><a href="#tab-1" data-toggle="tab">Despatch Address</a></li>*@
                                            <li class="active"><a href="#tab-1" data-toggle="tab">Transporter Details</a></li>


                                        </ul>
                                        <div class="tab-content">


                                            <div class="tab-pane active" id="tab-1">

                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <div class="tab-pane active" id="tab-1">
                                                                <div class="row">
                                                                    <div class="col-md-4">
                                                                        <div class="form-group">
                                                                            <br /> <label for="inputName3" class="col-sm-4 control-label"><strong>LR.No :</strong><label class="Mandatory"></label></label>                                                        
                                                                                @Html.DisplayFor(C => C.LRno)
                                                                                @Html.HiddenFor(C => C.LRno)                                                                          
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-8">
                                                                        <div class="form-group">
                                                                            <br /> <label for="inputName3" class="col-sm-6 control-label"><strong>Transporter Name :</strong><label class="Mandatory"></label></label>
                                                                            @Html.DisplayFor(C => C.drivername)
                                                                            @Html.HiddenFor(C => C.drivername)
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="row">
                                                                    <div class="col-md-4">
                                                                        <div class="form-group">
                                                                            <br /><label for="inputName3" class="col-sm-4 control-label"><strong>LR.Date :</strong><label class="Mandatory"></label></label>
                                                                            @Html.DisplayFor(C => C.LRdate)
                                                                            @Html.HiddenFor(C => C.LRdate)
                                                                        </div>
                                                                    </div>                                                                   
                                                                    <div class="col-md-8">
                                                                        <div class="form-group">
                                                                            <br />  <label for="inputName3" class="col-sm-6 control-label"><strong>Place Of Dispatch :</strong><label class="Mandatory"></label></label>                                                                          
                                                                                @Html.DisplayFor(C => C.dispatchname)
                                                                                @Html.HiddenFor(C => C.dispatchname)                                                                           
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div style="height:10px;"></div>
                                                                <div class="row">
                                                                    <div class="col-md-12">
                                                                        <div class="form-group">

                                                                            <br /> <label for="inputName3" class="col-sm-12 control-label"><strong>Amount In Words :</strong><label class="Mandatory"></label></label>
                                                                            <div class="col-sm-10">
                                                                                @*  @Html.HiddenFor(C => C.Amountinwords) *@
                                                                                @Html.TextBoxFor(C => C.Amountinwords, new { @id = "Amountinwords", @class = "form-control", @TabIndex = 2, onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = true })
                                                                            </div>
                                                                            
                                                                        </div>
                                                                    </div>

                                                                </div>
                                                                <div class="row">
                                                                    <div class="col-md-12">
                                                                        <div class="form-group">

                                                                            <br /> <label for="inputName3" class="col-sm-2 control-label"><strong>Narration :</strong><label class="Mandatory"></label></label>
                                                                            <div class="col-sm-10">
                                                                                
                                                                                @Html.TextAreaFor(C => C.Narration, new { @id = "txtNarration", @class = "form-control", @value = "Invoice to", @TabIndex = 1 })
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                @*1st tab*@
                                                            </div>
                                                            @*1st tab*@

                                                        </div>


                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>



                            <div style="height:30px;"></div>
                            <div class="col-lg-8"></div>
                            <button type="submit" class="btn btn-success" type="button" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListPurchaseorder", "Purchaseorder")'">Cancel</button>


                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script>
       $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,

        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        //endDate: new Date(),
        forceParse: 0
    });
    $(function () {
        $('._select').select2();
    });
      function changeUOM(ItemId, i) {
         var uom =document.getElementById("txtUOM" + i).value;
         var qty =document.getElementById("ordqty" + i).value;
         var proid=document.getElementById("hdvariant" + i).value; 

         if (qty == "")
                qty = 0;

          $.ajax({
              url: 'GetUOMDetail',
              data: { "ItemId": ItemId, "uom": uom , "proid": proid },
             type: "GET",
             success: function (result) {

                 document.getElementById("txtCF" + i).value = result.cf;
                 var cfqty = result.cf;
                 var cqty = eval(cfqty) * eval(qty);
                   document.getElementById("txtCfQty" + i).value = cqty.toFixed(2);

             },
              error: function () {
                  debugger;
                  alert("Please Select Varient");
              }
          });
    }
    function changeTot(element) {
        var isChecked = $(element).prop('checked');
        var symbol = isChecked ? '-' : '+';
        var round = document.getElementById("txtRound").value;
        round = round.startsWith('-') ? round.substring(1) : round;
        var net = document.getElementById("txtNet").value;

        var total = 0;
        if (symbol == "+") {
            total = eval(net) + eval(round);

        }
        if (symbol == "-") {
            total = eval(net) - eval(round);

        }
        document.getElementById("txtNet").value = total.toFixed(2);

        //$('#toggle-state').text(symbol);
    }

    $(document).ready(function () {
        $('#toggle-two').change(function () {
            changeTot(this);
        });
    });

    function changeCF(_this, i) {
         var qty =document.getElementById("ordqty" + i).value;
         var cf =document.getElementById("txtCF" + i).value;


         if (qty == "")
                qty = 0;

            if (cf == "")
                cf = 1;

                 var cqty = eval(cf) * eval(qty);
                   document.getElementById("txtCfQty" + i).value = cqty.toFixed(2);

     }
    function removeRow(i) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + i);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + i).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
        try {
            var GTot = 0;
            var j = 0;
            var qty = 0;
            var tot = 0;
            var totfrieght = 0;
            var cgsttotamt = 0;
            var sgsttotamt = 0;
            var igsttotamt = 0;
            var disttotamt = 0;
            var rej = 0;
            var totdis = 0;
            var tpknc = 0;
            var tochr = 0;
            var tsdis = 0;
            var totamt = 0;
            var totamount = 0;
            var state = document.getElementById("state").value;
            var qty = document.getElementById("txtRecived" + i).value;
            var rej = document.getElementById("txtRejected" + i).value;
            var ordqty = document.getElementById("ordqty" + i).value;
            var up = document.getElementById("txtRate" + i).value;
            var amt = document.getElementById("Amountinwords" + i).value;

            var IGST = document.getElementById("IGSTP" + i).value;

            var CGST = document.getElementById("CGSTP" + i).value;

            var SGST = document.getElementById("SGSTP" + i).value;

           // var frieght = document.getElementById("txtFrigCharge" + i).value;
            var Disc = document.getElementById("txtDiscAmount" + i).value;

            var Acc = document.getElementById("txtAccepted" + i).value;

            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;



            if (IGST == "")
                IGST = 0;

            if (CGST == "")
                CGST = 0;


            if (SGST == "")
                SGST = 0;

                 if (rej == "")
                rej = 0;

            if (Disc == "")
                Disc = 0;

             if (Acc == "")
                Acc = 0;

                 //var rej = eval(qty) - eval(Acc);
            //document.getElementById("txtRejected" + i).value = rej.toFixed(2);
            document.getElementById("txtCfQty" + i).value = qty;

            if (eval(qty) > eval(ordqty)) {
                var eqty = eval(qty) - eval(ordqty);
                document.getElementById("exqty" + i).innerHTML = eqty;
                document.getElementById("txtexqty" + i).value = eqty;
                document.getElementById("shortqty" + i).innerHTML = "0";

            }
            if (eval(qty) < eval(ordqty)) {
                var sqty = eval(ordqty) - eval(qty);
                document.getElementById("shortqty" + i).innerHTML = sqty;
                document.getElementById("txtshortqty" + i).value = sqty;
                document.getElementById("exqty" + i).innerHTML = "0";
            }
            if (eval(qty) == eval(ordqty)) {

                document.getElementById("shortqty" + i).innerHTML = "0";
                document.getElementById("exqty" + i).innerHTML = "0";
            }
             document.getElementById("txtAccepted" + i).value = qty;
             if (eval(rej) > 0)
             {
                 var rejqty = eval(qty)-eval(rej);

                document.getElementById("txtAccepted" + i).value = rejqty;

             }


             if(eval(qty) < eval(rej))
             {
                 alert("Rejected is more than Received");
                 document.getElementById("txtRejected" + i).value = "0";
                 document.getElementById("txtAccepted" + i).value = Acc;
             }

            var tot = eval(qty) * eval(up);
            document.getElementById("txtAmount" + i).value = tot.toFixed(2);

            var dis = eval(tot);

            var igstperc = (eval(dis) / 100) * eval(IGST);
            var cgstperc = (eval(dis) / 100) * eval(CGST);
            var sgstperc = (eval(dis) / 100) * eval(SGST);


            if (state == "Tamil Nadu") {
                document.getElementById("CGST" + i).value = cgstperc.toFixed(2);
                document.getElementById("SGST" + i).value = sgstperc.toFixed(2);
                document.getElementById("IGST" + i).value = "0";
            }
            else {
                document.getElementById("IGST" + i).value = igstperc.toFixed(2);
                document.getElementById("CGST" + i).value ="0";
                document.getElementById("SGST" + i).value = "0";
            }

             var tottax = eval(dis) + eval(igstperc) + eval(cgstperc) + eval(sgstperc);
             //alert(totdis);
             //alert(tot);
             //alert(Disc);
            var totdis =tottax;
            if(eval(tot) < eval(Disc))
            {
                 alert("Discount is higher than Actual Amount");
                 document.getElementById("txtDiscAmount" + i).value = "0";

            document.getElementById("txtAmount" + i).value = tot.toFixed(2);
            document.getElementById("Amountinwords" + i).value = tot.toFixed(2);
            
            }
            else{
                 totdis = eval(tottax) - eval(Disc);
            }
            document.getElementById("txtTotal" + i).value = totdis.toFixed(2);
            

            //var tottax = eval(dis) + eval(igstperc) + eval(cgstperc) + eval(sgstperc) - eval(Disc);


            //document.getElementById("txtTotal" + i).value = tottax.toFixed(2);


            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {

                    var amt = $(this).find('#txtAmount' + j.toString()).val();
                    if (amt == "")
                        amt = 0;

                    totamt += eval(amt);


                    var tamt = $(this).find('#txtTotal' + j.toString()).val();
                    if (tamt == "")
                        tamt = 0;

                    totamount += eval(tamt);
                    if (state == "Tamil Nadu") {
                        var cgst = $(this).find('#CGST' + j.toString()).val();
                        if (cgst == "")
                            cgst = 0;

                        cgsttotamt += eval(cgst);


                        var sgst = $(this).find('#SGST' + j.toString()).val();
                        if (sgst == "")
                            sgst = 0;

                        sgsttotamt += eval(sgst);
                        igsttotamt += 0;
                    }
                    else{
                        var igst = $(this).find('#IGST' + j.toString()).val();
                        if (igst == "")
                            igst = 0;


                        igsttotamt += eval(igst);
                        sgsttotamt += 0;

                        cgsttotamt += 0;
                    }


                    var dist = $(this).find('#txtDiscAmount' + j.toString()).val();
                    if (dist == "")
                        dist = 0;

                    disttotamt += eval(dist);




                }
                j += 1;
            });
            //alert(totamount);
            var roundamount = Math.round(totamount);
             //alert(roundamount);
            var round = eval(roundamount) - eval(totamount);

         //   document.getElementById("txtFrieghtcharge").value = totfrieght.toFixed(2);

            document.getElementById("txtGross").value = totamt.toFixed(2);
            document.getElementById("txtNet").value = roundamount.toFixed(2);
            //document.getElementById("hidnet").value = totamount.toFixed(2);


            document.getElementById("txtRound").value = round.toFixed(2);
            if(state=="Tamil Nadu")
            {
                document.getElementById("txtCGST").value = cgsttotamt.toFixed(2);
            document.getElementById("txtSGST").value = sgsttotamt.toFixed(2);
            }
            else{
                 document.getElementById("txtIGST").value = igsttotamt.toFixed(2);
            }
           
            document.getElementById("txtDisc").value = disttotamt.toFixed(2);


            document.getElementById("Amountinwords").value = withDecimal(roundamount.toFixed(2));


        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">--Please select--</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    function changeQty(_this, i) {
        try {
            var GTot = 0;
            var j = 0;
            var qty = 0;
            var tot = 0;
            var totfrieght = 0;
            var cgsttotamt = 0;
            var sgsttotamt = 0;
            var igsttotamt = 0;
            var disttotamt = 0;
            var rej = 0;
            var totdis = 0;
            var tpknc = 0;
            var tochr = 0;
            var tsdis = 0;
            var totamt = 0;
            var totamount = 0;
            var state = document.getElementById("state").value;
            var qty = document.getElementById("txtRecived" + i).value;
            
            var rej = document.getElementById("txtRejected" + i).value;

            var ordqty = document.getElementById("ordqty" + i).value;
            var up = document.getElementById("txtRate" + i).value;

            var IGST = document.getElementById("IGSTP" + i).value;
          

            var CGST = document.getElementById("CGSTP" + i).value;

            var SGST = document.getElementById("SGSTP" + i).value;

           // var frieght = document.getElementById("txtFrigCharge" + i).value;
            var Disc = document.getElementById("txtDiscAmount" + i).value;

            var Acc = document.getElementById("txtAccepted" + i).value;
            var CF = document.getElementById("txtCF" + i).value;

            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;



            if (IGST == "")
                IGST = 0;

            if (CGST == "")
                CGST = 0;


            if (SGST == "")
                SGST = 0;

                 if (rej == "")
                rej = 0;

            if (Disc == "")
                Disc = 0;

             if (Acc == "")
                Acc = 0;

                 if (CF == "")
                CF = 0;

                
             document.getElementById("txtCfQty" + i).value = eval(qty) * eval(CF);

            if (eval(qty) > eval(ordqty)) {
                var eqty = eval(qty) - eval(ordqty);
                document.getElementById("exqty" + i).innerHTML = eqty;

                document.getElementById("txtexqty" + i).value = eqty;
                document.getElementById("shortqty" + i).innerHTML = "0";

            }
            if (eval(qty) < eval(ordqty)) {
                var sqty = eval(ordqty) - eval(qty);
                document.getElementById("shortqty" + i).innerHTML = sqty;

                document.getElementById("txtshortqty" + i).value = sqty;


                document.getElementById("exqty" + i).innerHTML = "0";
            }
            if (eval(qty) == eval(ordqty)) {

                document.getElementById("shortqty" + i).innerHTML = "0";
                document.getElementById("exqty" + i).innerHTML = "0";
            }
             document.getElementById("txtAccepted" + i).value = qty;
           
             if (eval(rej) > 0)
             {
                 var rejqty = eval(qty)-eval(rej);
                 
                document.getElementById("txtAccepted" + i).value = rejqty;
             
             }

             if(eval(qty) < eval(rej))
             {
                 alert("Rejected is more than Received");
                 document.getElementById("txtRejected" + i).value = "0";
                 document.getElementById("txtAccepted" + i).value = Acc;
             }

            var tot = eval(qty) * eval(up);
            document.getElementById("txtAmount" + i).value = tot.toFixed(2);
           
            var dis = eval(tot);

            var igstperc = (eval(dis) / 100) * eval(IGST);
            var cgstperc = (eval(dis) / 100) * eval(CGST);
            var sgstperc = (eval(dis) / 100) * eval(SGST);


            if (state == "Tamil Nadu") {
                document.getElementById("CGST" + i).value = cgstperc.toFixed(2);
                document.getElementById("SGST" + i).value = sgstperc.toFixed(2);
                document.getElementById("IGST" + i).value = "0";
            }
            else {
                document.getElementById("IGST" + i).value = igstperc.toFixed(2);
                document.getElementById("CGST" + i).value ="0";
                document.getElementById("SGST" + i).value = "0";
            }

             var tottax = eval(dis) + eval(igstperc) + eval(cgstperc) + eval(sgstperc);
             //alert(totdis);
             //alert(tot);
             //alert(Disc);
            var totdis =tottax;
            if(eval(tot) < eval(Disc))
            {
                 alert("Discount is higher than Actual Amount");
                 document.getElementById("txtDiscAmount" + i).value = "0";

            document.getElementById("txtAmount" + i).value = tot.toFixed(2);
            }
            else{
                 totdis = eval(tottax) - eval(Disc);
            }
            document.getElementById("txtTotal" + i).value = totdis.toFixed(2);


            //var tottax = eval(dis) + eval(igstperc) + eval(cgstperc) + eval(sgstperc) - eval(Disc);


            //document.getElementById("txtTotal" + i).value = tottax.toFixed(2);


            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {

                    var amt = $(this).find('#txtAmount' + j.toString()).val();
                    if (amt == "")
                        amt = 0;

                    totamt += eval(amt);


                    var tamt = $(this).find('#txtTotal' + j.toString()).val();
                    if (tamt == "")
                        tamt = 0;

                    totamount += eval(tamt);
                    if (state == "Tamil Nadu") {
                        var cgst = $(this).find('#CGST' + j.toString()).val();
                        if (cgst == "")
                            cgst = 0;

                        cgsttotamt += eval(cgst);


                        var sgst = $(this).find('#SGST' + j.toString()).val();
                        if (sgst == "")
                            sgst = 0;

                        sgsttotamt += eval(sgst);
                        igsttotamt += 0;
                    }
                    else{
                        var igst = $(this).find('#IGST' + j.toString()).val();
                        if (igst == "")
                            igst = 0;


                        igsttotamt += eval(igst);
                        sgsttotamt += 0;

                        cgsttotamt += 0;
                    }


                    var dist = $(this).find('#txtDiscAmount' + j.toString()).val();
                    if (dist == "")
                        dist = 0;

                    disttotamt += eval(dist);




                }
                j += 1;
            });
            //alert(totamount);
            var roundamount = Math.round(totamount);
             //alert(roundamount);
            var round = eval(roundamount) - eval(totamount);

         //   document.getElementById("txtFrieghtcharge").value = totfrieght.toFixed(2);

            document.getElementById("txtGross").value = totamt.toFixed(2);
            document.getElementById("txtNet").value = roundamount.toFixed(2);
            document.getElementById("hidnet").value = totamount.toFixed(2);


            document.getElementById("txtRound").value = round.toFixed(2);
            if (eval(cgsttotamt) > 0){
                document.getElementById("txtCGST").value = cgsttotamt.toFixed(2);
            document.getElementById("txtSGST").value = sgsttotamt.toFixed(2);
            }
            if (eval(igsttotamt) > 0){
                document.getElementById("txtIGST").value = igsttotamt.toFixed(2);
            }
            document.getElementById("txtDisc").value = disttotamt.toFixed(2);


            document.getElementById("Amountinwords").value = withDecimal(roundamount.toFixed(2));


        }
        catch (ex) {
            alert(ex.message);
        }
    }

    function changeDisc(_this, i) {
        try {
            var tot = 0;
            var cgsttotamt = 0;
            var sgsttotamt = 0;
            var igsttotamt = 0;
            var disttotamt = 0;
            var totamt = 0;

           
            var state = document.getElementById("state").value;
            var qty = document.getElementById("ordqty" + i).value;
            var discper = document.getElementById("txtDiscPer" + i).value;
            var up = document.getElementById("txtRate" + i).value;
            var IGST = document.getElementById("IGSTP" + i).value;
            var CGST = document.getElementById("CGSTP" + i).value;
            var SGST = document.getElementById("SGSTP" + i).value;
            var Disc = document.getElementById("txtDiscAmount" + i).value;
            var CF = document.getElementById("txtCF" + i).value;
            if(CF=="0") {
                CF="1";
            }
              

            // Calculate total amount based on quantity and rate
            tot = qty * up;

            var cfqty = qty * CF;

            // Update the fields for Amount and CFQty
            document.getElementById("txtAmount" + i).value = tot.toFixed(2);
            document.getElementById("txtCfQty" + i).value = cfqty.toFixed(2);

          

            // if (discper >= 0) {
            //     Disc = (discper / 100) * tot;
            //     document.getElementById("txtDiscAmount" + i).value = Disc.toFixed(2);
            // }
            if(discper < 100){
                    Disc = (discper / 100) * tot;
                    document.getElementById("txtDiscAmount" + i).value = Disc.toFixed(2);  // **Fixed formatting issue**
                    tottax -= Disc;
            }
            else{
                    alert("Disc % Should not exceed 100");
                    document.getElementById("txtDiscPer" + i).value = "0";
                    document.getElementById("txtDiscAmount" + i).value = "0";
                    document.getElementById("txtAmount" + i).value = tot.toFixed(2);
            }
            // Ensure discount doesn't exceed total
            // if (Disc > tot) {
            //     Disc = tot;
            //     document.getElementById("txtDiscAmount" + i).value = Disc.toFixed(2);
            // }

            var tottax = eval(tot)- eval(Disc);

            // Calculate tax percentages
            var igstperc = (eval(tottax) / 100) * IGST;
            var cgstperc = (eval(tottax) / 100) * CGST;
            var sgstperc = (eval(tottax) / 100) * SGST;

            // Update hidden fields with calculated values

            if (state == "Tamil Nadu") {
                document.getElementById("CGST" + i).value = cgstperc.toFixed(2);
                document.getElementById("SGST" + i).value = sgstperc.toFixed(2);
                document.getElementById("IGST" + i).value = "0";
            }
            else {
                document.getElementById("IGST" + i).value = igstperc.toFixed(2);
                document.getElementById("CGST" + i).value ="0";
                document.getElementById("SGST" + i).value = "0";
            }

            // document.getElementById("CGST" + i).value = cgstperc.toFixed(2);
            // document.getElementById("SGST" + i).value = sgstperc.toFixed(2);
            // document.getElementById("IGST" + i).value = igstperc.toFixed(2);

            // Ensure total tax is correctly calculated
            var  tottax1 = eval(igstperc) + eval(cgstperc) + eval(sgstperc) + eval(tot) - eval(Disc);
            
            // Update the total amount field
            document.getElementById("txtTotal" + i).value = tottax1.toFixed(2);
            //alert(tottax1);
            // Calculate totals for all rows
            var totalAmount = 0;
            var totalCGST = 0;
            var netamt = 0;
            var totalSGST = 0;
            var totalIGST = 0;
            var totalDisc = 0;

            var j = 0;
             
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    var amt = ($(this).find('#txtAmount' + j).val());
                    if (amt == "")
                        amt = 0;
                    totalAmount += eval(amt);

                    var tamt = ($(this).find('#txtTotal' + j).val());
                    if (tamt == "")
                        tamt = 0;
                    netamt += eval(tamt);

                    if (state == "Tamil Nadu") {
                        var cgst = $(this).find('#CGST' + j.toString()).val();
                        if (cgst == "")
                            cgst = 0;

                        totalCGST += eval(cgst);
                        

                        var sgst = $(this).find('#SGST' + j.toString()).val();
                        if (sgst == "")
                            sgst = 0;

                        totalSGST += eval(sgst);
                        totalIGST += 0;
                    }
                    else{
                        var igst = $(this).find('#IGST' + j.toString()).val();
                        if (igst == "")
                            igst = 0;


                        totalIGST += eval(igst);
                        totalSGST += 0;

                        totalCGST += 0;
                    }

                    // var cgst = ($(this).find('#CGST' + j).val());
                    // if (cgst == "")
                    //     cgst = 0;
                    // totalCGST += cgst;

                    // var sgst = ($(this).find('#SGST' + j).val());
                    // if (sgst == "")
                    //     sgst = 0;
                    // totalSGST += sgst;

                    // var igst = ($(this).find('#IGST' + j).val());
                    // if (igst == "")
                    //     igst = 0;
                    // totalIGST += igst;

                    var dist = ($(this).find('#txtDiscAmount' + j).val());
                    if (dist == "")
                        dist = 0;
                    totalDisc +=  eval(dist);
                }
                j += 1;
            });
             
            // Proper rounding to avoid floating-point issues
            var roundamount = Math.round(netamt.toFixed(2));
             //alert(roundamount);
            var round = eval(roundamount) - eval(netamt);

         //   document.getElementById("txtFrieghtcharge").value = totfrieght.toFixed(2);
           
            document.getElementById("txtGross").value = totalAmount.toFixed(2);
           
            document.getElementById("txtNet").value = roundamount.toFixed(2);
            
            document.getElementById("hidnet").value = netamt.toFixed(2);
           
            document.getElementById("txtRound").value = round.toFixed(2);
           

            if (eval(totalCGST) > 0){
                document.getElementById("txtCGST").value = totalCGST.toFixed(2);
              
                document.getElementById("txtSGST").value = totalSGST.toFixed(2);
               
            }
            if (eval(totalIGST) > 0){
                document.getElementById("txtIGST").value = totalIGST.toFixed(2);
                
            }

            document.getElementById("txtDisc").value = totalDisc.toFixed(2);
            

            // Convert total amount to words and display
            document.getElementById("Amountinwords").value = withDecimal(roundamount.toFixed(2));

        } catch (ex) {
            alert("Error: " + ex.message);
        }
    }


    // function changeDisc(_this, i) {
    //     try {
    //         var tot = 0;
    //         var totfrieght = 0;
    //         var cgsttotamt = 0;
    //         var sgsttotamt = 0;
    //         var igsttotamt = 0;
    //         var disttotamt = 0;
    //         var totamt = 0;
    //         var qty = parseFloat(document.getElementById("ordqty" + i).value) || 0;
    //         var discper = parseFloat(document.getElementById("txtDiscPer" + i).value) || 0;
    //         var up = parseFloat(document.getElementById("txtRate" + i).value) || 0;
    //         var IGST = parseFloat(document.getElementById("IGSTP" + i).value) || 0;
    //         var CGST = parseFloat(document.getElementById("CGSTP" + i).value) || 0;
    //         var SGST = parseFloat(document.getElementById("SGSTP" + i).value) || 0;
    //         var Disc = parseFloat(document.getElementById("txtDiscAmount" + i).value) || 0;
    //         var CF = parseFloat(document.getElementById("txtCF" + i).value) || 0;

    //         // Calculate total amount based on quantity and rate
    //         tot = qty * up;

    //         // If discount percentage is greater than 0, apply the discount


    //         var cfqty = qty * CF;

    //         // Update the fields for Amount and CFQty
    //         document.getElementById("txtAmount" + i).value = tot.toFixed(2);
    //         document.getElementById("txtCfQty" + i).value = cfqty.toFixed(2);

    //         var tottax=tot;

    //         if (discper > 0) {
    //             Disc = (discper / 100) * tot;
    //             document.getElementById("txtDiscAmount" + i).value = Disc;
    //             tottax = tottax - Disc;
    //         }

    //         // Calculate tax percentages
    //         var igstperc = (tottax / 100) * IGST;
    //         var cgstperc = (tottax / 100) * CGST;
    //         var sgstperc = (tottax / 100) * SGST;

    //         // Update hidden fields with calculated values
    //         document.getElementById("CGST" + i).value = cgstperc.toFixed(2);
    //         document.getElementById("SGST" + i).value = sgstperc.toFixed(2);
    //         document.getElementById("IGST" + i).value = igstperc.toFixed(2);

    //         // Calculate total tax and discounted amount
    //          tottax += igstperc + cgstperc + sgstperc;

    //         // Ensure that Discount doesn't exceed Total Amount




    //         // Update the total amount field
    //         document.getElementById("txtTotal" + i).value = tottax.toFixed(2);

    //         // Calculate totals for all rows
    //         var totalAmount = 0;
    //         var totalCGST = 0;
    //         var netamt = 0;
    //         var totalSGST = 0;
    //         var totalIGST = 0;
    //         var totalDisc = 0;
    //         var j = 0;

    //         $('tr.chkitemlst').each(function () {
    //             if ($(this).css('display') !== 'none') {
    //                 var amt = parseFloat($(this).find('#txtAmount' + j).val()) || 0;
    //                 totalAmount += amt;

    //                 var tamt = parseFloat($(this).find('#txtTotal' + j).val()) || 0;
    //                     netamt += tamt;

    //                 var cgst = parseFloat($(this).find('#CGST' + j).val()) || 0;
    //                 totalCGST += cgst;

    //                 var sgst = parseFloat($(this).find('#SGST' + j).val()) || 0;
    //                 totalSGST += sgst;

    //                 var igst = parseFloat($(this).find('#IGST' + j).val()) || 0;
    //                 totalIGST += igst;

    //                 var dist = parseFloat($(this).find('#txtDiscAmount' + j).val()) || 0;
    //                 totalDisc += dist;
    //             }
    //             j += 1;

    //         });

    //         // Calculate rounded amount and update fields
    //         var roundedAmount = Math.round(netamt.toFixed(2));
    //         var roundDiff = roundedAmount - netamt;

    //         document.getElementById("txtGross").value = totalAmount.toFixed(2);
    //         document.getElementById("txtNet").value = roundedAmount.toFixed(2);
    //         document.getElementById("hidnet").value = netamt.toFixed(2);

    //         document.getElementById("txtRound").value = roundDiff.toFixed(2);
    //         document.getElementById("txtCGST").value = totalCGST.toFixed(2);
    //         document.getElementById("txtSGST").value = totalSGST.toFixed(2);
    //         document.getElementById("txtIGST").value = totalIGST.toFixed(2);
    //         document.getElementById("txtDisc").value = totalDisc.toFixed(2);

    //         // Convert total amount to words and display
    //         document.getElementById("Amountinwords").value = withDecimal(roundedAmount.toFixed(2));

    //     } catch (ex) {
    //         alert("Error: " + ex.message);
    //     }
    // }
    function changeDisTot(_this) {
         try {
             var GTot = 0;
             var j = 0;
             var qty = 0;
             var tot = 0;
             var totfrieght = 0;
             var cgsttotamt = 0;
             var sgsttotamt = 0;
             var igsttotamt = 0;
             var disttotamt = 0;
             var rej = 0;
             var totdis = 0;
             var tpknc = 0;
             var tochr = 0;
             var tsdis = 0;
             var totamt = 0;
             var totamount = 0;

             var Disc = document.getElementById("txtDisc").value;

             var tot = document.getElementById("hidnet").value;


             if (Disc == "")
                 Disc = 0;

             if (tot == "")
                 tot = 0;


             var rej = eval(tot) - eval(Disc) ;
             document.getElementById("txtNet").value = rej.toFixed(2);


             var roundamount = Math.round(rej);

             var round = eval(roundamount) - eval(rej);




             document.getElementById("txtNet").value = roundamount.toFixed(2);
             document.getElementById("hidnet").value = rej.toFixed(2);


             document.getElementById("txtRound").value = round.toFixed(2);

             document.getElementById("Amountinwords").value = withDecimal(roundamount.toFixed(2));


         }
         catch (ex) {
             alert(ex.message);
         }
     }
      function changeFrightTot(_this) {
         try {
             var GTot = 0;
             var j = 0;
             var qty = 0;
             var tot = 0;
             var totfrieght = 0;
             var cgsttotamt = 0;
             var sgsttotamt = 0;
             var igsttotamt = 0;
             var disttotamt = 0;
             var rej = 0;
             var totdis = 0;
             var tpknc = 0;
             var tochr = 0;
             var tsdis = 0;
             var totamt = 0;
             var totamount = 0;

             var Fri = document.getElementById("txtFrieghtcharge").value;

             var tot = document.getElementById("hidnet").value;


             if (Fri == "")
                 Fri = 0;

             if (tot == "")
                 tot = 0;


             var rej = eval(tot) + eval(Fri) ;
             document.getElementById("txtNet").value = rej.toFixed(2);


             var roundamount = Math.round(rej);

             var round = eval(roundamount) - eval(rej);




             document.getElementById("txtNet").value = roundamount.toFixed(2);
             document.getElementById("hidnet").value = rej.toFixed(2);


             document.getElementById("txtRound").value = round.toFixed(2);

             document.getElementById("Amountinwords").value = withDecimal(roundamount.toFixed(2));


         }
         catch (ex) {
             alert(ex.message);
         }
     }
    function roundtorupee(amt) {
        if (amt - round_decimals(amt, 0) > 0.5)
            return pad_with_zeros(round_decimals(amt + 1, 0));
        return pad_with_zeros(round_decimals(amt, 0));
    }
    function convertNumberToWords(amount) {
        var words = new Array();
        words[0] = '';
        words[1] = 'One';
        words[2] = 'Two';
        words[3] = 'Three';
        words[4] = 'Four';
        words[5] = 'Five';
        words[6] = 'Six';
        words[7] = 'Seven';
        words[8] = 'Eight';
        words[9] = 'Nine';
        words[10] = 'Ten';
        words[11] = 'Eleven';
        words[12] = 'Twelve';
        words[13] = 'Thirteen';
        words[14] = 'Fourteen';
        words[15] = 'Fifteen';
        words[16] = 'Sixteen';
        words[17] = 'Seventeen';
        words[18] = 'Eighteen';
        words[19] = 'Nineteen';
        words[20] = 'Twenty';
        words[30] = 'Thirty';
        words[40] = 'Forty';
        words[50] = 'Fifty';
        words[60] = 'Sixty';
        words[70] = 'Seventy';
        words[80] = 'Eighty';
        words[90] = 'Ninety';
        amount = amount.toString();
        var atemp = amount.split(".");
        var number = atemp[0].split(",").join("");
        var n_length = number.length;
        var words_string = "";
        if (n_length <= 9) {
            var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);
            var received_n_array = new Array();
            for (var i = 0; i < n_length; i++) {
                received_n_array[i] = number.substr(i, 1);
            }
            for (var i = 9 - n_length, j = 0; i < 9; i++, j++) {
                n_array[i] = received_n_array[j];
            }
            for (var i = 0, j = 1; i < 9; i++, j++) {
                if (i == 0 || i == 2 || i == 4 || i == 7) {
                    if (n_array[i] == 1) {
                        n_array[j] = 10 + parseInt(n_array[j]);
                        n_array[i] = 0;
                    }
                }
            }
            value = "";
            for (var i = 0; i < 9; i++) {
                if (i == 0 || i == 2 || i == 4 || i == 7) {
                    value = n_array[i] * 10;
                } else {
                    value = n_array[i];
                }
                if (value != 0) {
                    words_string += words[value] + " ";
                }
                if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Crores ";
                }
                if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Lakhs ";
                }
                if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Thousand ";
                }
                if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {
                    words_string += "Hundred and ";
                } else if (i == 6 && value != 0) {
                    words_string += "Hundred ";
                }
            }
            words_string = words_string.split("  ").join(" ");
        }
        return words_string;
    }
    function withDecimal(n) {
          var nums = n.toString().split('.')
          var whole = convertNumberToWords(nums[0])
          if (nums.length == 2) {
              var fraction = convertNumberToWords(nums[1])
              if(nums[1]=="00")
              {
                  return whole + ' ' + fraction + 'Rupees Only ';
              }
            else{
                return whole + ' ' + fraction + 'Paise Only ';
            }
          } else {
            return whole + 'Rupees Only ';
          }
    }
    // function withDecimal(n) {
        
    //     var nums = n.toString().split('.')
    //     var whole = convertNumberToWords(nums[0])
    //     if (nums.length == 2) {
    //         var fraction = convertNumberToWords(nums[1])
    //         return whole + ' ' + fraction;
    //     } else {
    //         return whole;
    //     }
    // }


</script>
<script src="~/js/bootstrap-toggle.min.js"></script>
<script>
    (function () {
        $('#toggle-two').bootstrapToggle();
    });
</script>


