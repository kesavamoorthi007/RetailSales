@model RetailSales.Models.Inventory.StockAdjustment;
@{
    ViewData["Title"] = "StockAdjustment";
}
<style>
    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>

<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>

<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li class="active"> <strong>Stock Adjustment </strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    @using (Html.BeginForm("StockAdjustment", "StockAdjustment", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <br />
                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Location<label class="mandatory">*</label></label>
                                        <div class="col-sm-5">
                                            @Html.DropDownListFor(C => C.Location, Model.Locationlst, "---Plaese Select---", new { @id = "txtLocation", @class = "form-control _select", @TabIndex = 1 })<br />
                                            @Html.HiddenFor(C => C.ID)
                                        </div> 
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Type<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            <div class="input-group">

                                                @Html.RadioButtonFor(C => C.Type, "Addition", new { @TabIndex = 2 })
                                                <label id="mt-radio">Addition (+)</label>&emsp;
                                                @Html.RadioButtonFor(C => C.Type, "Deduction", new { @TabIndex = 2 })
                                                <label id="mt-radio">Deduction (-)</label>
                                            </div>
                                        </div>                                        
                                    </div>
                                </div>
                            </div>


                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-5 control-label">Stock Adjustment Number<label class="mandatory"></label></label>
                                        <div class="col-sm-5">
                                            @Html.TextBoxFor(C => C.DocId, new { @id = "txtDocId", @class = "form-control", @TabIndex = 1, @readonly = "readonly" })<br />
                                            
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Date<label class="mandatory">*</label></label>
                                        <div class="input-group date form_date col-sm-2" data-date="" data-date-format="dd-M-yyyy" style="width: 200px">
                                            @Html.TextBoxFor(C => C.DocDate, new { @id = "txtDocDate", @class = "form-control", @TabIndex = 2, @readonly = true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                       
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn btn-primary" /></p>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:100px;">


                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                            <tr>

                                                <th>Product Category</th>
                                                <th>Product Name</th>
                                                <th>Variant</th>
                                                <th> Unit </th>
                                                <th> Stock Qty </th>
                                                <th> Adjust Qty </th>
                                                @* <th>Rate (₹) </th>
                                                <th>Amount (₹)</th> *@
                                                <th></th>
                                        </thead>
                                        <tbody id="tbBooks">
                                            @{

                                                int i = 0;
                                                int j = 1;

                                                foreach (var item in Model.StockAdjustmentList.ToList())
                                                {
                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">
                                                        <td>
                                                            @Html.DropDownListFor(o => o.StockAdjustmentList[i].Item, Model.StockAdjustmentList[i].Itemlst, "---Please Select---", new { @class = "form-control _select newcss", @id = "ddlItem" + i, style = "width: 220px;", onchange = "changeProductDetails(this.value," + i + ")" })
                                                            @Html.HiddenFor(o => o.StockAdjustmentList[i].saveItemId)
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(o => o.StockAdjustmentList[i].Product, Model.StockAdjustmentList[i].Productlst, "---Please Select---", new { @class = "form-control _select newcss", @id = "ddlProduct" + i, style = "width: 220px;", onchange = "changeVariantDetails(this.value," + i + ")" })
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(o => o.StockAdjustmentList[i].Variant, Model.StockAdjustmentList[i].Variantlst, "---Please Select---", new { @class = "form-control _select newcss", @id = "ddlVarient" + i, style = "width: 220px;", onchange = "changeVariantItem(this.value," + i + ")" })
                                                            
                                                        </td>                                                        
                                                        <td>

                                                            @Html.TextBoxFor(o => o.StockAdjustmentList[i].Unit, new { @id = "txtUnit" + i, @class = "form-control", style = "width: 80px;", @readonly = "readonly" })
                                                        </td>
                                                        <td>

                                                            @Html.TextBoxFor(o => o.StockAdjustmentList[i].StockQty, new { @id = "txtStockQty" + i, @class = "form-control", style = "width: 80px;", type = "number", @readonly = "readonly", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.StockAdjustmentList[i].Qty, new { @id = "txtQty" + i, @class = "form-control", style = "width: 80px;", type = "number", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>

                                                        <td>
                                                            @Html.HiddenFor(o => o.StockAdjustmentList[i].Rate, new { @id = "txtRate" + i, @class = "form-control", style = "width: 80px; text-align: right;", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(o => o.StockAdjustmentList[i].Amount, new { @id = "txtAmount" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(o => o.StockAdjustmentList[i].Isvalid, new { @id = "Isvalid" + i })
                                                            <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="StockAdjustmentList.Index" type="hidden" value="@(i)" />
                                                        </td>
                                                         
                                                        
                                                    </tr>
                                                    i = i + 1;
                                                    j = j + 1;

                                                }
                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>

                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Narration<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextAreaFor(C => C.Reason, new { @id = "txtReason", @class = "form-control", @TabIndex = 1 }) <br />

                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div style="height:30px;"></div>
                            <div class="col-lg-8"></div>
                            <button type="submit" class="btn btn-success" type="button" id="btnSave">Submit</button>                           
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListStockAdjustment", "StockAdjustment")'">Cancel</button>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $('.form_time').datetimepicker({
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 1,
        minView: 0,
        maxView: 1,
        forceParse: 0
    });


    $('.to_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        endDate: new Date(),
        forceParse: 0

    });

    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        endDate: new Date(),
        forceParse: 0
    }).on('changeDate', function (selected) {
        var minDate = new Date(selected.date.valueOf());
        $('.to_date').datetimepicker('setStartDate', minDate);

    });
    $(function () {
        $('._select').select2();
    });

    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;

            if (document.getElementById("txtLocation").value == "") {
                isValid = false;
                $(txtLocation).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Location");
                return false;
            }
            else {
                $(txtLocation).css({
                    "border": "",
                    "background": ""
                });
            }
                              

            var j = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {


                    if ($(this).find('#ddlItem' + j.toString()).val() != "" || $(this).find('#ddlItem' + j.toString()).val() != "0") {

                        if ($(this).find('#ddlItem' + j.toString()).val() == "" || $(this).find('#ddlItem' + j.toString()).val() == 0) {
                            isValid = false;
                            $(this).find('#ddlItem' + j.toString()).css({
                                "border": "1px solid red",
                                "background": "#FFCECE"
                            });
                            alert("Please Select Product Category");
                            $(this).find('#ddlItem' + j.toString()).focus();
                            return false;
                        }
                        else {
                            $(this).find('#ddlItem' + j.toString()).css({
                                "border": "",
                                "background": ""
                            });
                        }
                    }
                    if ($(this).find('#ddlProduct' + j.toString()).val() != "" || $(this).find('#ddlProduct' + j.toString()).val() != "0") {

                        if ($(this).find('#ddlProduct' + j.toString()).val() == "" || $(this).find('#ddlProduct' + j.toString()).val() == 0) {
                            isValid = false;
                            $(this).find('#ddlProduct' + j.toString()).css({
                                "border": "1px solid red",
                                "background": "#FFCECE"
                            });
                            alert("Please Select Product Name");
                            $(this).find('#ddlProduct' + j.toString()).focus();
                            return false;
                        }
                        else {
                            $(this).find('#ddlProduct' + j.toString()).css({
                                "border": "",
                                "background": ""
                            });
                        }
                    }
                    if ($(this).find('#ddlVarient' + j.toString()).val() != "" || $(this).find('#ddlVarient' + j.toString()).val() != "0") {

                        if ($(this).find('#ddlVarient' + j.toString()).val() == "" || $(this).find('#ddlVarient' + j.toString()).val() == 0) {
                            isValid = false;
                            $(this).find('#ddlVarient' + j.toString()).css({
                                "border": "1px solid red",
                                "background": "#FFCECE"
                            });
                            alert("Please Select Variant");
                            $(this).find('#ddlVarient' + j.toString()).focus();
                            return false;
                        }
                        else {
                            $(this).find('#ddlVarient' + j.toString()).css({
                                "border": "",
                                "background": ""
                            });
                        }
                    }
                    if ($(this).find('#txtQty' + j.toString()).val() == "" || $(this).find('#txtQty' + j.toString()).val() == "0") {
                        isValid = false;
                        $(this).find('#txtQty' + j.toString()).css({
                            "border": "1px solid red",
                            "background": "#FFCECE"
                        });

                        alert("Please Enter Adjust Qty");
                        $(this).find('#txtQty' + j.toString()).focus();
                        return false;

                    }
                    else {
                        $(this).find('#txtQty' + j.toString()).css({
                            "border": "",
                            "background": ""
                        });
                    }

                }
                j += 1;
            });
            if (document.getElementById("txtReason").value == "") {
                isValid = false;
                $(txtReason).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Narration");
                return false;
            }
            else {
                $(txtReason).css({
                    "border": "",
                    "background": ""
                });
            }

           

            if (isValid == false)
                e.preventDefault();
        });

    });
            
    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">--Please select--</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    function changeProductDetails(ItemId,i) {
         $.ajax({
             url: 'GetProductJSON',
             type: "POST",  
               data: { "ItemId": ItemId },
             success: function (change) {
                 PopulateDropDown("#ddlProduct" + i, change); 

                 // Call changeVarientItem only after success
                var selectedItem = $("#ddlProduct" + i).val();
                 if (selectedItem) {
                     changeVarientItem(selectedItem, i);
                 }
             },
             error: function () {
                 alert("Please Select Product");
             }
         });
     }
    
     function changeVariantDetails(id, i) {
        $.ajax({
            url: 'GetVarientJSON',
            type: "post",
            data: { 'id': id },
            cache: false,
            success: function (response) {
                PopulateDropDown("#ddlVarient" + i, response);
            },
            error: function () {
                debugger;
                alert("Please Select Variant");
            }
        });
    }
    function changeVariantItem(ItemId, i) {
        $.ajax({
            url: 'GetItemDetails',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {
                document.getElementById("txtUnit" + i).value = result.unit;
                document.getElementById("txtRate" + i).value = result.rate;
                document.getElementById("txtStockQty" + i).value = result.stockqty;

            },
            error: function () {
                alert("please Select Item");
            }
        });
    }
     function changeQty(_this, i) {
        try {

            var j = 0;
            var sqty = 0;
            var tot = 0;
            var totamt = 0;
            var totamount = 0;
           
            var qty = document.getElementById("txtQty" + i).value;
            var up = document.getElementById("txtRate" + i).value;


            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;


            var tot = eval(qty) * eval(up);
            document.getElementById("txtAmount" + i).value = tot.toFixed(2);

            


            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    sqty = $(this).find('#txtQty' + j.toString()).val();
                    if (sqty == "")
                        sqty = 0;

                    tot += eval(sqty);


                }
                j += 1;
            });

        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function limit(element) {
        var max_chars = 1;

        if (element.value.length > max_chars) {
            element.value = element.value.substr(0, max_chars);
        }
    }
    function AddRow() {
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetItemGrpJSON',
            success: function (data) {

                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendRow(opt);
            }
        })
    }
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
     function AppendRow(opt) {
        var index = $("#tbBooks").children("tr").length;

        var Item = "<td><select style = 'width: 220px;' class='form-control _select newcss' id='ddlItem" + index + "' name='StockAdjustmentList[" + index + "].Item' onchange = 'changeProductDetails(this.value," + index + ")'><option value=''>---Please select---</option>" + opt + "</select></td>";

        var Product = "<td><select style = 'width: 220px;' class='form-control _select newcss' id='ddlProduct" + index + "' name='StockAdjustmentList[" + index + "].Product' onchange = 'changeVariantDetails(this.value," + index + ")'><option value=''>--Please select--</option>" + opt + "</select></td>";

        var Variant = "<td><select style = 'width: 220px;' class='form-control _select newcss' id='ddlVarient" + index + "' name='StockAdjustmentList[" + index + "].Variant' onchange = 'changeVariantItem(this.value," + index + ")'><option value=''>--Please select--</option></select></td>";
       
        var Unit = "<td><input class='form-control' id='txtUnit" + index + "' name='StockAdjustmentList[" + index + "].Unit'  style='width: 80px;' readonly='True' /></td>";

        var StockQty = "<td><input class='form-control' id='txtStockQty" + index + "' name='StockAdjustmentList[" + index + "].StockQty'  style='width: 80px;' readonly='True' onkeydown='return isNumeric2(event.keyCode,this.value)' onkeyup = 'changeQty(this," + index + ")' /></td>";

        var Qty = "<td><input class='form-control' id='txtQty" + index + "' name='StockAdjustmentList[" + index + "].Qty'  style='width: 80px;' min='0'' max='99' onkeydown='return isNumeric2(event.keyCode,this.value)' onkeyup = 'changeQty(this," + index + ")' /></td>";

        var Rate = "<td><input type='hidden' class='form-control' id='txtRate" + index + "' name='StockAdjustmentList[" + index + "].Rate'  onkeydown='return isNumeric2(event.keyCode,this.value)' onkeyup = 'changeQty(this," + index + ")' style='width: 80px; text-align: right;' /></td>";

        var Amount = "<td><input type='hidden' class='form-control' id='txtAmount" + index + "' name='StockAdjustmentList[" + index + "].Amount'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' onkeyup = 'changeQty(this," + index + ")' readonly='True' /></td>";

        var removeCell = "<td><input id='Isvalid" + index + "' name='StockAdjustmentList[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='StockAdjustmentList.Index' type='hidden' value='" + index + "'  /></td>";


        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + Item + Product + Variant + Unit + StockQty + Qty + Rate + Amount + removeCell + "</tr>";
        //alert(Packing);
        $("#tbBooks").append(newRow);

        $(function () {
            $('._select').select2();
        });
    }

</script>