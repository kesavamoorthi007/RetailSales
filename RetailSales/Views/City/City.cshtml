@model RetailSales.Models.City;
@{
    ViewData["Title"] = "City";
}
<style>
    .mandatory {        
        color: red;
        position: relative;
        top: 2px;
        left: 5px;        
    }
</style>

<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>

<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li class="active"> <strong>City </strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    @using (Html.BeginForm("City", "City", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <br />
                            <div class="row">
                                <div class="col-lg-3"></div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Country Name<label class="mandatory">*</label></label>
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(C => C.CountryId, Model.colist, "---Please Select---", new { @id = "txtCountryId", @class = "form-control _select", @TabIndex = 1, onchange = "changestate(this.value)" })<br />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="row">
                                <div class="col-lg-3"></div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br/><label for="inputName3" class="col-sm-4 control-label">State Name<label class="mandatory">*</label></label>
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(C => C.StateId, Model.stlist, "---Please Select---", new { @id = "txtStateId", @class = "form-control _select", @TabIndex = 1 })<br />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-3"></div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">City Name<label class="mandatory">*</label></label>
                                        <div class="col-sm-12">
                                            @Html.TextBoxFor(C => C.CityName, new { @id = "txtCityName", @class = "form-control", @TabIndex = 1 })
                                            @Html.HiddenFor(C => C.ID)
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-3"></div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">Pin Code<label class="mandatory">*</label></label>
                                        <div class="col-sm-12">
                                            @Html.TextBoxFor(C => C.PinCode, new { @id = "txtPinCode", @class = "form-control", @type = "number", @maxlength = "6", @TabIndex = 1 })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div style="height:30px;"></div>
                            <div class="col-lg-3"></div>
                            <div class="col-md-9">
                                <button type="submit" class="btn btn-success" type="button" id="btnSave">Submit</button>
                                <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListCity", "City")'">Cancel</button>
                            </div>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    // i/p validation purpose

    $(function () {
        $('._select').select2();
    });

    function changestate(stateid) {
        $.ajax({
            url: "GetstateJSON",
            type: "post",
            data: { 'stateid': stateid },
            cache: false,
            success: function (response) {
                PopulateDropDown("#txtStateId", response);
            },
            error: function () {
                debugger;
                alert("Please Select Country");
            }
        });
       
    }

    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">--Please select--</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }

    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;
            if (document.getElementById("txtCountryId").value == "" ) {
                isValid = false;
                $(txtCountryId).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Country Name");
                return false;
            }
            else {
                $(txtCountryId).css({
                    "border": "",
                    "background": ""
                });
            }
             if (document.getElementById("txtStateId").value == "" ) {
                isValid = false;
                $(txtStateId).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter State Name");
                return false;
            }
            else {
                $(txtStateId).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtCityName").value == "") {
                isValid = false;
                $(txtCityName).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter City Name");
                return false;
            }
            else {
                $(txtCityName).css({
                    "border": "",
                    "background": ""
                });
            }
           if (document.getElementById("txtPinCode").value == "") {
                isValid = false;
                $(txtPinCode).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Pin Code");
                return false;
            }
            else {
                $(txtPinCode).css({
                    "border": "",
                    "background": ""
                });
            }
            
            if (isValid == false)
                e.preventDefault();
        });

    });
</script>