@* @model RetailSales.Models.Master.Rate

@{
    ViewData["Title"] = "Rate";
}
<style>
    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>

<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>
<div style="height:25px;"></div>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li class="active"> <strong>Rate</strong> </li>
        </ol>
    </div>
</div>

<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    @using (Html.BeginForm("Rate", "Rate", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <br />
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <br><label for="inputName3" class="col-sm-4 control-label">Doc Date<label class="mandatory">*</label></label>

                                        <div class="input-group date form_date col-sm-6" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.DocDate, new { @id = "DocDate", @class = "form-control", @TabIndex = 2, @readonly = true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                            @Html.HiddenFor(C => C.ID)
                                        </div>
                                    </div>
                                </div>
                                 <div class="col-lg-4">
                                    <div class="form-group">
                                        <br><label for="inputName3" class="col-sm-4 control-label">Valid From<label class="mandatory">*</label></label>

                                        <div class="input-group date form_date col-sm-6" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.ValidFrom, new { @id = "ValidDate", @class = "form-control", @TabIndex = 2 })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <br><label for="inputName3" class="col-sm-4 control-label">Valid To<label class="mandatory">*</label></label>

                                        <div class="input-group date to_date col-sm-6" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.ValidTo, new { @id = "ValidTo", @class = "form-control", @TabIndex = 2 })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                    </div>
                                </div>
                            </div>                          
                            
                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">


                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                            <tr>

                                                <th>Item</th>
                                                <th>Variant</th>
                                                <th>Unit</th>
                                                <th>Rate </th>
                                            </tr>
                                        </thead>
                                        <tbody id="tbBooks">
                                            @{

                                                int i = 0;
                                                int j = 1;

                                                foreach (var item in Model.RateListIdem.ToList())
                                                {
                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">


                                                        <td>
                                                            @Html.TextBoxFor(o => o.RateListIdem[i].Item, new { @id = "txtItem" + i, @class = "form-control", style = "width: 220px;", @readonly = "readonly" })
                                                            @Html.HiddenFor(o => o.RateListIdem[i].saveItemId)
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.RateListIdem[i].Varient, new { @class = "form-control", @id = "Varient" + i, style = "width: 220px;",@readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.RateListIdem[i].Unit, new { @id = "txtUnit" + i, @class = "form-control", style = "width: 200px;", @readonly = "readonly" })
                                                        </td>
                                                        <td>

                                                            @Html.TextBoxFor(o => o.RateListIdem[i].Rate1, new { @id = "txtRate" + i, @class = "form-control", style = "width: 80px;", type = "number" })
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(o => o.RateListIdem[i].Isvalid, new { @id = "Isvalid" + i })
                                                            <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="RateListIdem.Index" type="hidden" value="@(i)" />
                                                        </td>
                                                    </tr>
                                                    i = i + 1;
                                                    j = j + 1;

                                                }
                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div style="height:30px;"></div>
                            <div class="col-lg-8"></div>
                            <button type="submit" class="btn btn-success" type="button" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListRate", "Rate")'">Cancel</button>

                        </form>

                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $('.form_time').datetimepicker({
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 1,
        minView: 0,
        maxView: 1,
        forceParse: 0
    });


    $('.to_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        startDate: new Date(),
        forceParse: 0

    });

    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        endDate: new Date(),
        forceParse: 0
    }).on('changeDate', function (selected) {
        var minDate = new Date(selected.date.valueOf());
        $('.to_date').datetimepicker('setStartDate', minDate);

    });
    
        function PopulateDropDownn(dropDownId, list) {
            //alert(list);
            $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
            if (list != null && list.length > 0) {
                $(dropDownId).removeAttr("disabled");
                $.each(list, function () {
                    $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
                });
            }
            $(dropDownId).trigger("liszt:updated");
        }
    function limit(element) {
        var max_chars = 1;

        if (element.value.length > max_chars) {
            element.value = element.value.substr(0, max_chars);
        }
    }
    
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }

</script>



 *@