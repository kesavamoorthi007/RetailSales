@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model RetailSales.Models.Home
@{
    Layout = "_Layout";
}
<style>
    .row {
        --bs-gutter-x: 1.5rem;
        --bs-gutter-y: 0;
        display: flex;
        flex-wrap: nowrap;
        margin-top: calc(-1 * var(--bs-gutter-y));
        margin-right: calc(-0.5 * var(--bs-gutter-x));
        margin-left: calc(-0.5 * var(--bs-gutter-x));
    }

    .app-body .row {
        display: block !important;
    }

    .app-body .col-xxl-12,
    .app-body .col-sm-12,
    .app-body .col-12 {
        width: 100% !important;
        max-width: 100% !important;
    }

</style>
<div style="height:20px;"></div>
<!-- page-wrapper Start-->
<div class="page-wrapper compact-wrapper" id="pageWrapper">
    <!-- Page Body Start-->
    <div class="page-body-wrapper">
        @* <div class="page-body"> *@
        <div class="container-fluid">
            <div class="page-title">
                <div class="row">
                    <div class="col-6">
                        <h4>
                            Dashboard
                        </h4>
                    </div>
                    <div class="col-6">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Index", "Home")">
                                    <svg class="stroke-icon">
                                        <use href="../assets/svg/icon-sprite.svg#stroke-home"></use>
                                    </svg>
                                </a>
                            </li>
                            <li class="breadcrumb-item">Dashboard</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
        <!-- Container-fluid starts-->
        <div class="container-fluid">
            <div class="row size-column">
                <div class="col-xxl-9 box-col-12">
                    <div class="row">
                        <div class="col-xl-3 col-sm-6">
                            <div class="card o-hidden small-widget">
                                <div class="card-body total-upcoming">
                                    <span class="f-w-600 f-14">Dashboard</span>
                                    <div class="project-details">
                                        <div class="project-counter">
                                            <h2 class="f-w-500 f-14"></h2>
                                        </div>
                                        <div class="product-sub bg-primary-light">
                                            <svg class="invoice-icon">
                                                <a href="@Url.Action("Index", "Home")"><use href="../assets/svg/icon-sprite.svg#fill-home"></use></a>
                                            </svg>
                                        </div>
                                    </div>
                                    <ul class="bubbles">
                                        <li class="bubble"> </li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-3 col-sm-6">
                            <div class="card o-hidden small-widget">
                                <div class="card-body total-Progress border-b-warning border-2">
                                    <span class="f-w-600 f-14">Purchase</span>
                                    <div class="project-details">
                                        <div class="project-counter">
                                            <a href="@Url.Action("ListPurchaseorder", "Purchaseorder")"><h2 class="f-w-600 f-14">18</h2></a>
                                        </div>
                                        <div class="product-sub bg-warning-light">
                                            <svg class="invoice-icon">
                                                <a href="@Url.Action("ListPurchaseorder", "Purchaseorder")"> <use href="../assets/svg/icon-sprite.svg#cart"></use></a>
                                            </svg>
                                        </div>
                                    </div>
                                    <ul class="bubbles">
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-3 col-sm-6">
                            <div class="card o-hidden small-widget">
                                <div class="card-body total-Progress border-b-warning border-2">
                                    <span class="f-w-600 f-14">Inventory</span>
                                    <div class="project-details">
                                        <div class="project-counter">
                                            <a href="@Url.Action("ListSalesInvoice", "SalesInvoice")"><h2 class="f-w-600 f-14">15</h2></a>
                                        </div>
                                        <div class="product-sub bg-warning-light">
                                            <svg class="invoice-icon">
                                                <a href="@Url.Action("ListSalesInvoice", "SalesInvoice")"><use href="../assets/svg/icon-sprite.svg#new-order"></use></a>
                                            </svg>
                                        </div>
                                    </div>
                                    <ul class="bubbles">
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-3 col-sm-6">
                            <div class="card o-hidden small-widget">
                                <div class="card-body total-Complete border-b-secondary border-2">
                                    <span class="f-w-600 f-14">Sales</span>
                                    <div class="project-details">
                                        <div class="project-counter">
                                            <a href="@Url.Action("ListSalesInvoice", "SalesInvoice")"><h2 class="f-w-600 f-14">22</h2></a>
                                        </div>
                                        <div class="product-sub bg-secondary-light">
                                            <svg class="invoice-icon">
                                                <a href="@Url.Action("ListSalesInvoice", "SalesInvoice")"><use href="../assets/svg/icon-sprite.svg#sale"></use></a>
                                            </svg>
                                        </div>
                                    </div>
                                    <ul class="bubbles">
                                        <li class="bubble"> </li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"> </li>
                                        <li class="bubble"></li>
                                        <li class="bubble"> </li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"> </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-3 col-sm-6">
                            <div class="card o-hidden small-widget">
                                <div class="card-body total-Complete border-b-secondary border-2">
                                    <span class="f-w-600 f-14">Master</span>
                                    <div class="project-details">
                                        <div class="project-counter">
                                            <a href="@Url.Action("ListEmployee", "Employee")"><h2 class="f-w-600 f-14"></h2></a>
                                        </div>
                                        <div class="product-sub bg-secondary-light">
                                            <svg class="invoice-icon">
                                                <a href="@Url.Action("ListEmployee", "Employee")"><use href="../assets/svg/icon-sprite.svg#add-square"></use></a>
                                            </svg>
                                        </div>
                                    </div>
                                    <ul class="bubbles">
                                        <li class="bubble"> </li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"> </li>
                                        <li class="bubble"></li>
                                        <li class="bubble"> </li>
                                        <li class="bubble"></li>
                                        <li class="bubble"></li>
                                        <li class="bubble"> </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Container-fluid Ends-->
        @*   </div> *@


    </div>
</div>
<div class="app-body">
    <!-- Top Selling Product -->
    <div class="row gx-3">
        <div class="col-12">
            <div class="card mb-3">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title">Top Selling Product and Variants</h5>
                    <select id="chartType" class="form-select form-select-sm" style="width:200px;">
                        <option value="bar" selected>Bar (Variant vs Qty)</option>
                        <option value="pie">Pie (Total Variant Share)</option>
                        <option value="line">Line (Variant Trend)</option>
                    </select>
                </div>
                <div class="card-body">
                    <div id="variantChart" style="height:400px;"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Daily Sales Summary -->
    <div class="row gx-3">
        <div class="col-12">
            <div class="card mb-3">
                <div class="card-header">
                    <h5 class="card-title">Daily Sales Summary</h5>
                </div>
                <div class="card-body">
                    <div id="salesAreaChart" style="height:400px;"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xxl-12 col-sm-12">
        <div class="card mb-3">
            <div class="card-header">
                <h5 class="card-title">Monthly Sales Summary</h5>
            </div>
            <div class="card-body">
                <div id="monthlyLineChart" style="height:400px;"></div>
            </div>
        </div>
    </div>

</div>

<script>
        document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".col-xxl-6, .col-sm-12").forEach(function (col) {
            col.classList.remove("col-xxl-6");
            col.classList.add("col-12");
        });
    });

</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var monthlyData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.MonthlyChart));

        var months = monthlyData.map(x => x.MonthYear);
        var sales = monthlyData.map(x => x.Total_Sales);
        var amount = monthlyData.map(x => x.Total_Amount);

        var options = {
            series: [
                {
                    name: 'Total Sales',
                    type: 'line',
                    data: sales
                },
                {
                    name: 'Total Amount',
                    type: 'line',
                    data: amount
                }
            ],
            chart: {
                height: 400,
                type: 'line',
                zoom: { enabled: false }
            },
            stroke: {
                curve: 'smooth',
                width: 3
            },
            
            xaxis: {
                categories: months,
                title: { text: 'Month-Year' }
            },
            yaxis: [
                {
                    title: { text: "Total Sales" }
                },
                {
                    opposite: true,
                    title: { text: "Total Amount" }
                }
            ],
            markers: {
                size: 5
            }
        };

        var chart = new ApexCharts(document.querySelector("#monthlyLineChart"), options);
        chart.render();
    });
</script>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {

            var chartData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.ProductChart));

            var labels = [];
            var labelQty = {};

            // Build labels as "ProductName (Variant)"
            chartData.forEach(function (item) {
                var label = (item.ProductName || "Unknown") + " (" + (item.Variant || "Default") + ")";
                if (!labels.includes(label)) labels.push(label);

                if (!labelQty[label]) labelQty[label] = 0;
                labelQty[label] += Number(item.TotalQtySold);
            });

            // Series for Bar/Line
            var series = [{ name: "Quantity Sold", data: labels.map(v => labelQty[v]) }];

            // Pie chart data
            var pieLabels = labels;
            var pieData = labels.map(v => labelQty[v]);

            var options = {
                chart: { type: "bar", height: 400 },
                plotOptions: { bar: { horizontal: true } }, // horizontal for readability
                series: series,
                xaxis: {
                    categories: labels,
                    labels: {
                        style: { fontSize: '12px', colors: '#000' },
                        formatter: function (value) {
                            if (!value) return "";
                            return String(value).replace(" (", "\n(");
                        }
                    }
                },
                dataLabels: {
                    enabled: true,
                    formatter: function (val) { return val; }
                },
                tooltip: {
                    y: { formatter: function (val) { return val + " Sold"; } }
                },
                colors: ["#116AEF", "#EF3B2C", "#4CAF50", "#F57600", "#8E44AD", "#B57FCC"],
                legend: { show: true }
            };

            var chart = new ApexCharts(document.querySelector("#variantChart"), options);
            chart.render();

            // Chart type switch
            document.getElementById("chartType").addEventListener("change", function () {
                var newType = this.value;

                if (newType === "pie") {
                    chart.updateOptions({
                        chart: { type: "pie" },
                        series: pieData,
                        labels: pieLabels.map(l => String(l).replace(" (", "\n(")),
                        dataLabels: {
                            enabled: true,
                            style: { fontSize: '12px', colors: ['#fff'] },
                            formatter: function (val, opts) {
                                let raw = opts.w.config.series[opts.seriesIndex];
                                return raw + " (" + val.toFixed(1) + "%)";
                            }
                        },
                        tooltip: {
                            y: { formatter: function (val) { return val + " Sold"; } }
                        },
                        legend: {
                            position: 'right',
                            formatter: function (seriesName, opts) {
                                let val = opts.w.config.series[opts.seriesIndex];
                                let total = opts.w.config.series.reduce((a, b) => a + b, 0);
                                let percent = ((val / total) * 100).toFixed(1);
                                return String(seriesName).replace(" (", "\n(") + ": " + val + " (" + percent + "%)";
                            }
                        },
                        xaxis: {}
                    }, true, true);
                } else if (newType === "line") {
                    chart.updateOptions({
                        chart: { type: "line" },
                        series: series,
                        xaxis: {
                            categories: labels,
                            labels: {
                                style: { fontSize: '12px', colors: '#000' },
                                formatter: function (value) {
                                    if (!value) return "";
                                    return String(value).replace(" (", "\n(");
                                }
                            }
                        },
                        stroke: { width: 3, curve: 'smooth' },
                        markers: { size: 4 },
                        dataLabels: {
                            enabled: true,
                            formatter: function (val) { return val; }
                        },
                        tooltip: {
                            shared: true,
                            intersect: false,
                            y: { formatter: function (val) { return val + " Sold"; } }
                        }
                    }, true, true);
                } else {
                    chart.updateOptions({
                        chart: { type: "bar" },
                        plotOptions: { bar: { horizontal: true } },
                        series: series,
                        xaxis: {
                            categories: labels,
                            labels: {
                                style: { fontSize: '12px', colors: '#000' },
                                formatter: function (value) {
                                    if (!value) return "";
                                    return String(value).replace(" (", "\n(");
                                }
                            }
                        },
                        dataLabels: {
                            enabled: true,
                            formatter: function (val) { return val; }
                        },
                        tooltip: {
                            y: { formatter: function (val) { return val + " Sold"; } }
                        }
                    }, true, true);
                }
            });

        });
    </script>
}
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {

        // --- Product Chart (already implemented by you) ---
        var chartData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.ProductChart));

        // existing product chart code here...

        // --- Sales Area Chart ---
        var salesData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.SalesChart));

        var salesDates = salesData.map(x => new Date(x.INV_DATE).toLocaleDateString());
        var totalAmounts = salesData.map(x => x.Total_Amount);
        var totalSales = salesData.map(x => x.Total_Sales);

        var optionsSales = {
            chart: { type: "area", height: 400, toolbar: { show: true } },
            series: [
                { name: "Total Amount", data: totalAmounts },
                { name: "No. of Sales", data: totalSales }
            ],
            xaxis: {
                categories: salesDates,
                labels: { rotate: -45, style: { fontSize: '12px', colors: '#000' } }
            },
            dataLabels: { enabled: false },
            stroke: { curve: "smooth", width: 3 },
            fill: { type: "gradient", gradient: { shadeIntensity: 1, opacityFrom: 0.4, opacityTo: 0.1, stops: [0, 90, 100] } },
            tooltip: {
                shared: true,
                intersect: false,
                y: {
                    formatter: function (val, opts) {
                        return opts.seriesIndex === 0 ? "₹" + val.toFixed(2) : val + " Sales";
                    }
                }
            },
            legend: { position: "top", horizontalAlign: "center" },
            colors: ["#116AEF", "#F57600"]
        };

        var salesChart = new ApexCharts(document.querySelector("#salesAreaChart"), optionsSales);
        salesChart.render();
    });
</script>