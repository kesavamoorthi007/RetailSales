@model RetailSales.Models.Supplier

@{
    ViewData["Title"] = "Supplier";
}
<style>
    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li class="active"> <strong>Supplier </strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    @using (Html.BeginForm("Supplier", "Supplier", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <br />
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-5 control-label">Supplier Category<label class="mandatory">*</label></label>
                                         <div class="col-sm-12">
                                             @Html.DropDownListFor(C => C.Category, Model.Categorylst, "--Please Select--", new { @id = "ddlCategory", @Class = "form-control _select", @TabIndex = 1 })

                                         </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                       <label for="inputName3" class="col-sm-5 control-label">Supplier Name<label class="mandatory">*</label></label>
                                        <div class="col-sm-12">
                                            @Html.TextBoxFor(C => C.Supp, new { @id = "txtSupp", @class = "form-control", @TabIndex = 2 })
                                            @Html.HiddenFor(C => C.ID)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                       <label for="inputName3" class="col-sm-5 control-label">Supplier Address</label>
                                        <div class="col-sm-12">
                                            @Html.TextAreaFor(C => C.Address, new { @id = "txtAddress", @class = "form-control", @TabIndex = 3 })

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="inputname3" class="col-sm-4 control-label">Credit Days<label class="mandatory">*</label></label>
                                        <div class="col-sm-12">
                                            @Html.TextBoxFor(C => C.Days, new { @id = "txtDays", @class = "form-control", @TabIndex = 4 })

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="gstNumber" class="col-sm-4 control-label">GST No<label class="mandatory">*</label></label>
                                        <div class="col-sm-12">
                                            @Html.TextBoxFor(C => C.Gst, new { @id = "gstNumber", @class = "form-control", @TabIndex = 5, oninput = "this.value = this.value.toUpperCase()" ,onchange="validateGSTNumber();" })

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                       <label for="inputName3" class="col-sm-4 control-label">State</label>
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(C => C.State, Model.Statelst, "--Please Select--", new { @id = "ddlState", @Class = "form-control _select", @TabIndex = 6 ,onchange = "changecity(this.value)" })

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                       <label for="inputName3" class="col-sm-4 control-label">City</label>
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(C => C.City, Model.Citylst, "--Please Select--", new { @id = "ddlCity", @Class = "form-control _select", @TabIndex = 7 })

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Mobile No<label class="mandatory">*</label></label>
                                        <div class="col-sm-12">
                                            @Html.TextBoxFor(C => C.Mobile, new
                                                {
                                                    @id = "txtMobile",
                                                    @class = "form-control",
                                                    @TabIndex = 8,
                                                    @placeholder = "Enter Mobile Number",
                                                    @maxlength = "10",
                                                    @type = "tel",
                                                    @onkeypress = "return event.charCode >= 48 && event.charCode <= 57"
                                                })
                                            @*@Html.TextBoxFor(C => C.Mobile, new { @id = "txtMobile", @class = "form-control", @TabIndex = 2, type = "number", onkeydown = "return isNumeric2(event.keyCode,this.value)" })*@

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Email ID</label>
                                        <div class="col-sm-12">
                                            @Html.TextBoxFor(C => C.Email, new { @id = "txtEmail", @class = "form-control", @Type = "email", @TabIndex = 9 })
                                            
                                        </div>
                                    </div>
                                </div>
                           </div>
                            <br />
                            <div class="row">
                                
                                
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Landline No</label>
                                        <div class="col-sm-12">
                                            @Html.TextBoxFor(C => C.Landline, new { @id = "txtLandline", @class = "form-control", @TabIndex = 10, @type = "number" })

                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div style="height:30px;"></div>
                            <div class="col-lg-8"></div>
                            <button type="submit" class="btn btn-success" type="button" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListSupplier", "Supplier")'">Cancel</button>



                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script>
        function validateGSTNumber() {
        var gstNumber = document.getElementById('gstNumber').value;
        var gstPattern = /^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$/;
        
        if (gstPattern.test(gstNumber)) {
            // If the GST number is valid, hide the error message
            //document.getElementById('gstError').style.display = 'none';
        } else {
            // If the GST number is invalid, show the error message
            alert("Invalid GST No");
           // document.getElementById('gstError').style.display = 'inline';
        }
    }

    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">--Please select--</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    function changecity(STATE_NAME) {
        $.ajax({
            url: "GetCityJSON",
            type: "post",
            data: { 'cityid': STATE_NAME },
            cache: false,
            success: function (response) {
                PopulateDropDown("#ddlCity", response);
            },
            error: function () {
                debugger;
                alert("Please Select State");
            }
        });
    }
    
    $(function () {
        $('._select').select2();
    });

    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;

            if (document.getElementById("ddlCategory").value == "") {
                isValid = false;
                $(ddlCategory).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Supplier Category");
                return false;
            }
            else {
                $(ddlCategory).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("txtSupp").value == "") {
                isValid = false;
                $(txtSupp).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Supplier Name");
                return false;
            }
            else {
                $(txtSupp).css({
                    "border": "",
                    "background": ""
                });
            }
            

            if (document.getElementById("txtDays").value == "") {
                isValid = false;
                $(txtDays).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Credit Days");
                return false;
            }
            else {
                $(txtDays).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("gstNumber").value == "") {
                isValid = false;
                $(gstNumber).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter GST No");
                return false;
            }
            else {
                $(gstNumber).css({
                    "border": "",
                    "background": ""
                });
            }
           var gstNumber = document.getElementById('gstNumber').value;
        var gstPattern = /^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[A-Z0-9]{1}[Z]{1}[0-9]{1}$/;
        
        if (gstPattern.test(gstNumber)) {
           // If the GST number is valid, hide the error message
           //document.getElementById('gstError').style.display = 'none';
        } else {
            
           // If the GST number is invalid, show the error message
           alert("Invalid GST No");
           return false;
          // document.getElementById('gstError').style.display = 'inline';
        }
            if (document.getElementById("txtMobile").value == "") {
                isValid = false;
                $(txtMobile).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Mobile No");
                return false;
            }
            else {
                $(txtMobile).css({
                    "border": "",
                    "background": ""
                });
            }
            if (isValid == false)
                e.preventDefault();
            
        });

    });
</script>


