@model RetailSales.Models.Stockinhand

@{
    ViewData["Title"] = "ListStockinhand";

}
<partial name="JqxGridPartial" />
<script type="text/javascript" src="~/jqwidgets/jqxgrid.columnsresize.js"></script>
<script type="text/javascript" src="~/jqwidgets/jqxcore.js"></script>

<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>
<div style="height:25px;"></div>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            @*  <li> <a href="#">Home</a> </li>
            <li> <a>Master</a> </li> *@
            <li class="active"> <strong>Stock In Hand</strong> </li>
        </ol>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        var source =
        {
            url: "MyListStockinhandgrid",
            data: {
                strstatus: ""
            },
            datatype: "json",
            updaterow: function (rowid, rowdata) {
                // synchronize with the server - send update command
            },
            datafields: [
                
                { name: 'item', type: 'string' },
                { name: 'product', type: 'string' },
                { name: 'variant', type: 'string' },
                { name: 'uom', type: 'string' },
                { name: 'qty', type: 'string' },
                { name: 'location', type: 'string' },
            ],
            id: 'id',
        };
        var dataAdapter = new $.jqx.dataAdapter(source,
            { contentType: 'application/json; charset=utf-8' }, {
            loadComplete: function () {

            }
        }
        );

        $("#grid").jqxGrid(
            {
                width: '100%',
                source: dataAdapter,
                height: 850,
                source: source,
                //autoheight: true,
                sortable: true,
                filterable: true,
                groupable: true,
                pageable: false,
                showfilterbar: true,
                theme: 'ui-start',
                //showfilterrow: true,
                //theme: 'fresh',
                //autorowheight: true,
                filterbarmode: 'simple',
                enablebrowserselection: true,
                columnsresize: true,
                selectionmode: 'multiplerowsextended',
                keyboardnavigation: false,
                showgroupaggregates: true,
                showstatusbar: true,
                showaggregates: true,
                //groups: ['product'],
                columns: [
                     { text: 'Location', filtertype: 'checkedlist', groupable: true, datafield: 'location', width: 100 },
                    { text: 'Product Category', filtertype: 'checkedlist', groupable: true, datafield: 'item', width: 150 },
                    { text: 'Product Name', filtertype: 'checkedlist', groupable: true, datafield: 'product', width: 350 },
                    { text: 'Variant', filtertype: 'checkedlist', groupable: true, datafield: 'variant', width: 200 },
                    { text: 'Unit', filtertype: 'checkedlist', datafield: 'uom', width: 80 },
                     {
                      text: 'Balance Quantity', datafield: 'qty', aggregates: ["sum"], cellsalign: 'right',
                      cellsrenderer: function (row, column, value, defaultRender, column, rowData) {
                          if (value.toString().indexOf("Sum") >= 0) {
                              return defaultRender.replace("Sum", "TotL");
                          }
                      },
                      aggregatesrenderer: function (aggregates, column, element) {
                            var roundedSum = parseFloat(aggregates.sum).toFixed(2);
                            var renderstring = '<div style="position: relative; margin-top: 4px; margin-right:5px; text-align: right; overflow: hidden;">' + "Total" + ': ' + roundedSum + '</div>';
                          return renderstring;
                      }
                  }
                ]
            });
        $("#ddlStatus").change(function () {
            var value = "Y";
            if ($(this).val() != "") {
                value = $(this).val();
            }
            source.data = {
                strstatus: value
            };
            $("#grid").jqxGrid({ source: source });
           // $("#grid").jqxGrid('collapseallgroups');
        });
    });

</script>

<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">

                    <form>
                        <br />
                        <div class="row">
                            <div class="col-md-2 ">
                                @Html.DropDownListFor(n => n.ddlStatus, new SelectListItem[]
                                { new SelectListItem() {Text = "Enabled", Value="Y"},
                                new SelectListItem() {Text = "Disabled", Value="N"}},
                                new { @id = "ddlStatus", Class = "dropdownlist margin_bottom_new form-control" })
                            </div>
                           
                        </div>
                        <br />
                        <div class="row">

                            <div class="col-md-12 ">
                                <div id="grid">
                                </div>
                            </div>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function ConfirmDelete() {
        return confirm("Are you sure you want to delete?");
    }
</script>


