@model RetailSales.Models.StockTransfer

@{
    ViewData["Title"] = "Stock Transfer";
}
<style>
    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>

<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>
<div style="height:25px;"></div>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li class="active"> <strong>Stock Transfer </strong> </li>
        </ol>
    </div>
</div>

<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    @using (Html.BeginForm("StockTransfer", "StockTransfer", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <br />
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Doc ID<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Documentid, new { @id = "txtDocumentid", @class = "form-control", @TabIndex = 1, @readonly = true })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <br><label for="inputName3" class="col-sm-4 control-label">Doc Date<label class="mandatory">*</label></label>
                                        <div class="input-group date form_date col-sm-6" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.DocumentDate, new { @id = "DocumentDate", @class = "form-control", @TabIndex = 2, @size = "20", style = "width: 170px", @readonly = true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">From Location<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Flocation, new { @id = "txtFlocation", @class = "form-control", @TabIndex = 1, @readonly = true })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">To Location<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Tlocation, new { @id = "txtTlocation", @class = "form-control", @TabIndex = 1, @readonly = true })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">From BinID<label class="mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.FBin, Model.FBinlst, "--Please Select--", new { @id = "ddlState", @Class = "form-control _select", @TabIndex = 1 })

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">To BinID<label class="mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.TBin, Model.TBinlst, "--Please Select--", new { @id = "ddlState", @Class = "form-control _select", @TabIndex = 1 })

                                        </div>
                                    </div>
                                </div>
                            </div>
@*
                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn btn-primary" /></p>
                                    </div>
                                </div>
                            </div>*@
                            @*<div class="row">
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <br><label for="inputName3" class="col-sm-5 control-label">Browse order<label class="mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Order, new { @id = "Order", @class = "form-control", @TabIndex = 1 })
                                        </div>
                                    </div>
                                </div>
                             </div>*@

                              <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn btn-primary" /></p>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">


                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                            <tr>

                                                <th>Item</th>
                                                <th>Variant</th>
                                                <th>Unit</th>
                                                <th> Stock </th>
                                                <th> Qty </th>
                                                <th> Rate </th>
                                                <th> Amount </th>
                                                <th></th>
                                        </thead>
                                        <tbody id="tbBooks">
                                            @{

                                                int i = 0;
                                                int j = 1;

                                                foreach (var item in Model.StockTransferItemLst.ToList())
                                                {
                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">
                                                        <td>
                                                            @Html.DropDownListFor(o => o.StockTransferItemLst[i].Item, Model.StockTransferItemLst[i].Itemlst, "---Please Select---", new { @class = "form-control _select newcss", @id = "ddlItem" + i, style = "width: 220px;", onchange = "changeItem(this.value," + i + ")"})
                                                            @Html.HiddenFor(o => o.StockTransferItemLst[i].saveItemId)
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(o => o.StockTransferItemLst[i].Varient, Model.StockTransferItemLst[i].Varientlst, "---Please Select---", new { @class = "form-control _select newcss", @id = "ddlVarient" + i, style = "width: 220px;", onchange = "changeVarientItem(this.value," + i + ")" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.StockTransferItemLst[i].Unit, new { @id = "txtUOM" + i, @class = "form-control", style = "width: 80px;", @readonly = "readonly" })
                                                        </td>
                                                        <td>

                                                            @Html.TextBoxFor(o => o.StockTransferItemLst[i].Stock, new { @id = "txtStock" + i, @class = "form-control", style = "width: 80px;", @readonly = "readonly" })
                                                        </td>
                                                        
                                                        <td>
                                                            @Html.HiddenFor(o => o.StockTransferItemLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            @Html.TextBoxFor(o => o.StockTransferItemLst[i].Qty, new { @id = "txtQty" + i, @class = "form-control", style = "width: 80px;",onkeyup = "changeQty(this.value,"+i+")"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.StockTransferItemLst[i].Rate, new { @id = "txtRate" + i, @class = "form-control", style = "width: 80px;",@readonly = "readonly"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.StockTransferItemLst[i].Amount, new { @id = "txtAmount" + i, @class = "form-control", style = "width: 80px;", @readonly = "readonly"})
                                                        </td>
                                                    </tr>
                                                    i = i + 1;
                                                    j = j + 1;

                                                }
                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>

                            @*<div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <br><label for="inputName3" class="col-sm-5 control-label">Discount Amount<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.TotDis, new { @id = "txtTotDis", @class = "form-control", @style ="text-align:right" , @TabIndex = 1, @readonly = true })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-5 control-label">Amount<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Total, new { @id = "txtTotal", @class = "form-control",@style ="text-align:right", @TabIndex = 1, @readonly = true })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-5 control-label">Total Amount<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Tot, new { @id = "txtTot", @class = "form-control", @style ="text-align:right",@TabIndex = 1, @readonly = true })
                                        </div>
                                    </div>
                                </div>
                            </div>*@

                            <div style="height:30px;"></div>
                            <div class="col-lg-8"></div>
                            <button type="submit" class="btn btn-success" type="button" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListStockTransfer", "StockTransfer")'">Cancel</button>



                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $('.form_time').datetimepicker({
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 1,
        minView: 0,
        maxView: 1,
        forceParse: 0
    });


    $('.to_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        endDate: new Date(),
        forceParse: 0

    });

    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        endDate: new Date(),
        forceParse: 0
    }).on('changeDate', function (selected) {
        var minDate = new Date(selected.date.valueOf());
        $('.to_date').datetimepicker('setStartDate', minDate);

    });
    $(function () {
        $('._select').select2();
    });
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;



            if (document.getElementById("txtCustomer").value == "") {
                isValid = false;
                $(txtCustomer).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Customer Name");
                return false;
            }
            else {
                $(txtCustomer).css({
                    "border": "",
                    "background": ""
                });
            } var j = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {


                    if ($(this).find('#ddlItem' + j.toString()).val() != "" || $(this).find('#ddlItem' + j.toString()).val() != "0") {

                        if ($(this).find('#ddlItem' + j.toString()).val() == "" || $(this).find('#ddlItem' + j.toString()).val() == 0) {
                            isValid = false;
                            $(this).find('#ddlItem' + j.toString()).css({
                                "border": "1px solid red",
                                "background": "#FFCECE"
                            });
                            alert("Please Select Item");
                            $(this).find('#ddlItem' + j.toString()).focus();
                            return false;
                        }
                        else {
                            $(this).find('#ddlItem' + j.toString()).css({
                                "border": "",
                                "background": ""
                            });
                        }
                    }
                    if ($(this).find('#txtQty' + j.toString()).val() == "" || $(this).find('#txtQty' + j.toString()).val() == "0") {
                        isValid = false;
                        $(this).find('#txtQty' + j.toString()).css({
                            "border": "1px solid red",
                            "background": "#FFCECE"
                        });

                        alert("Please Enter Qty");
                        $(this).find('#txtQty' + j.toString()).focus();
                        return false;

                    }
                    else {
                        $(this).find('#txtQty' + j.toString()).css({
                            "border": "",
                            "background": ""
                        });
                    }

                }
                j += 1;
            });



            if (isValid == false)
                e.preventDefault();
        });

    });

            function changeVarientItem(ItemId, i) {
                $.ajax({
                    url: 'GetVarientDetails',
                    data: { "ItemId": ItemId },
                    type: "GET",
                    success: function (result) {
                        document.getElementById("txtUOM" + i).value = result.uom;
                document.getElementById("txtRate" + i).value = result.rate;
                       

                    },
                    error: function () {
                        alert("Data Not Found");
                    }
                });
            }
   function changeQty(_this, i) {
        try {

            var j = 0;
            var sqty = 0;
            var tot = 0;
            var totamt = 0;
            var qty = document.getElementById("txtQty" + i).value;
            var up = document.getElementById("txtRate" + i).value;


            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;


            var tot = eval(qty) * eval(up);
            document.getElementById("txtAmount" + i).value = tot.toFixed(2);


            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    sqty = $(this).find('#txtQty' + j.toString()).val();
                    if (sqty == "")
                        sqty = 0;

                    tot += eval(sqty);

                    var amt = $(this).find('#txtAmount' + j.toString()).val();
                    if (amt == "")
                        amt = 0;

                    totamt += eval(amt);

                   

                }
                j += 1;
            });

           @*
            document.getElementById("txtTotal").value = totamt.toFixed(2);
                document.getElementById("txtTot").value = totamount.toFixed(2);*@

        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">--Please select--</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
            function changeItem(id, i) {
                $.ajax({
                    url: 'GetVarientJSON',
                    type: "post",
                    data: { 'id': id },
                    cache: false,
                    success: function (response) {
                        PopulateDropDown("#ddlVarient" + i, response);
                    },
                    error: function () {
                        debugger;
                        alert("Please Select Product");
                    }
                });
            }

         
  
    
    function AddRow() {
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetItemGrpJSON',
            success: function (data) {

                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendRow(opt);
            }
        })
    }
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    function PopulateDropDownn(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }

    function AppendRow(opt) {
        var index = $("#tbBooks").children("tr").length;

        var Item = "<td><select style = 'width: 220px;' class='form-control _select newcss' id='ddlItem" + index + "' name='StockTransferItemLst[" + index + "].ItemId' onchange = 'changeItem(this.value," + index + ")'><option value=''>---Please select---</option>" + opt + "</select></td>";

        var Variant = "<td><select style = 'width: 220px;' class='form-control _select newcss' id='ddlVarient" + index + "' name='StockTransferVariantLst[" + index + "].VariantId' onchange = 'changeVarientItem(this.value," + index + ")'><option value=''>---Please select---</option> </select></td>";

        var Unit = "<td><input class='form-control' id='txtUOM" + index + "' name='StockTransferItemLst[" + index + "].UOM'  style='width: 80px;' type='text'  readonly='True' /></td>";

        var Stock = "<td><input class='form-control' id='txtStock" + index + "' name='StockTransferItemLst[" + index + "].Bin'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' readonly='True' /></td>";

        var Qty = "<td><input class='form-control' id='txtQty" + index + "' name='StockTransferItemLst[" + index + "].Qty'  style='width: 80px;' min='0'' max='99' onkeyup = 'changeQty(this.value," +index + ")'  /></td>";

        var Rate = "<td><input class='form-control' id='txtRate" + index + "' name='StockTransferItemLst[" + index + "].Rate'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' readonly='True' /></td>";

        var Amount = "<td><input class='form-control' id='txtAmount" + index + "' name='StockTransferItemLst[" + index + "].Amount'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' readonly='True' /></td>";

        var removeCell = "<td><input id='Isvalid" + index + "' name='StockTransferItemLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='SalesInvoiceLst.Index' type='hidden' value='" + index + "'  /></td>";


        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + Item + Variant + Unit + Stock + Qty + Rate + Amount +removeCell + "</tr>";
        //alert(Packing);
        $("#tbBooks").append(newRow);

        $(function () {
            $('._select').select2();
        });
    }
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;

            if (document.getElementById("txtDocumentid ").value == "") {
                isValid = false;
                $(txtDocumentid).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Document Id");
                return false;
            }
            else {
                $(txtDocumentid).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("txtDocumentDate").value == "") {
                isValid = false;
                $(txtDocumentDate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Document Date");
                return false;
            }
            else {
                $(txtDocumentDate).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("txtItem").value == "") {
                isValid = false;
                $(txtItem).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Item");
                return false;
            }
            else {
                $(txtItem).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("txtVariant").value == "") {
                isValid = false;
                $(txtVariant).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Variant");
                return false;
            }
            else {
                $(txtVariant).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("txtQty").value == "") {
                isValid = false;
                $(txtQty).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Qty");
                return false;
            }
            else {
                $(txtQty).css({
                    "border": "",
                    "background": ""
                });
            }

            
            if (isValid == false)
                e.preventDefault();
        });

    });


</script>



